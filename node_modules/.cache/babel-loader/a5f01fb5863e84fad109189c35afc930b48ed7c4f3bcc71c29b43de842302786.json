{"ast":null,"code":"var _jsxFileName = \"/Users/hye/Documents/journal-whisper/src/Journal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport logo from \"./assets/logo.png\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PROXY_API_URL = window.location.hostname === \"localhost\" ? \"http://localhost:8090/transcribeAudio\" : \"https://journal-whisper.onrender.com/transcribeAudio\";\nconst formatDateLocal = date => {\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getDate()).padStart(2, \"0\");\n  return `${year}-${month}-${day}`;\n};\nexport default function Journal({\n  user,\n  onLogout\n}) {\n  _s();\n  const [entry, setEntry] = useState(\"\");\n  const [isRecording, setIsRecording] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const [saveMessage, setSaveMessage] = useState(\"\");\n  const [currentTimestamp, setCurrentTimestamp] = useState({\n    date: \"\",\n    time: \"\"\n  });\n  const [countdown, setCountdown] = useState(0);\n  const [recordingDuration, setRecordingDuration] = useState(0);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [entriesForDate, setEntriesForDate] = useState([]);\n  const [localEntries, setLocalEntries] = useState({});\n  const [entriesCache, setEntriesCache] = useState({}); // Cache for fetched entries\n  const [saveAnimating, setSaveAnimating] = useState(false);\n  const [saveClickAnimating, setSaveClickAnimating] = useState(false);\n  const [isLoadingEntries, setIsLoadingEntries] = useState(false);\n\n  // DEBUG: Add state for debugging\n  const [debugInfo, setDebugInfo] = useState(\"\");\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const countdownIntervalRef = useRef(null);\n  const generateTimestamp = () => {\n    const now = new Date();\n    return {\n      date: formatDateLocal(now),\n      time: now.toLocaleTimeString()\n    };\n  };\n  useEffect(() => {\n    setCurrentTimestamp(generateTimestamp());\n  }, []);\n  const fetchEntriesForDate = async (dateToFetch, forceRefresh = false) => {\n    const dateKey = formatDateLocal(dateToFetch);\n\n    // DEBUG: Log the request details\n    console.log(`🔍 Fetching entries for date: ${dateKey}, user: ${user}`);\n    setDebugInfo(`Fetching entries for ${dateKey} (user: ${user})`);\n\n    // Check cache first (unless force refresh)\n    if (!forceRefresh && entriesCache[dateKey]) {\n      console.log(`📋 Using cached entries for ${dateKey}:`, entriesCache[dateKey]);\n      setEntriesForDate(entriesCache[dateKey]);\n      setDebugInfo(`Used cached data for ${dateKey} (${entriesCache[dateKey].length} entries)`);\n      return;\n    }\n    setIsLoadingEntries(true);\n    const FETCH_API_URL = window.location.hostname === \"localhost\" ? \"http://localhost:8090/getEntries\" : \"https://journal-whisper.onrender.com/getEntries\";\n    try {\n      console.log(`📡 Making API request to: ${FETCH_API_URL}`);\n      console.log(`📦 Request payload:`, {\n        user,\n        date: dateKey\n      });\n      const response = await fetch(FETCH_API_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user,\n          date: dateKey\n        })\n      });\n      console.log(`📊 Response status: ${response.status} ${response.statusText}`);\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(`❌ API Error: ${response.status} ${response.statusText}`, errorText);\n        setDebugInfo(`API Error: ${response.status} - ${errorText}`);\n        throw new Error(`Failed to fetch entries: ${response.status} ${response.statusText}`);\n      }\n      const data = await response.json();\n      console.log(`📋 Raw API response:`, data);\n\n      // Sort entries by time in descending order (most recent first)\n      const sortedEntries = (data.entries || []).sort((a, b) => {\n        // Convert time strings to comparable format\n        const timeA = new Date(`1970-01-01 ${a.time}`);\n        const timeB = new Date(`1970-01-01 ${b.time}`);\n        return timeB - timeA; // Descending order\n      });\n      console.log(`✅ Processed entries for ${dateKey}:`, sortedEntries);\n      setDebugInfo(`Found ${sortedEntries.length} entries for ${dateKey}`);\n\n      // Update cache and state\n      setEntriesCache(prev => ({\n        ...prev,\n        [dateKey]: sortedEntries\n      }));\n      setEntriesForDate(sortedEntries);\n    } catch (err) {\n      console.error(`❌ Error fetching entries:`, err);\n      setDebugInfo(`Error: ${err.message}`);\n      setEntriesForDate([]);\n      // Cache empty result to avoid repeated failed requests\n      setEntriesCache(prev => ({\n        ...prev,\n        [dateKey]: []\n      }));\n    } finally {\n      setIsLoadingEntries(false);\n    }\n  };\n  useEffect(() => {\n    fetchEntriesForDate(selectedDate);\n    setEntry(\"\");\n    setShowToast(false);\n    setSaveMessage(\"\");\n  }, [selectedDate, user]);\n  const startRecording = async durationSeconds => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      setSaveMessage(\"Audio recording not supported in this browser.\");\n      setShowToast(true);\n      return;\n    }\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      audioChunksRef.current = [];\n      setRecordingDuration(durationSeconds);\n      setCurrentTimestamp(generateTimestamp());\n      setCountdown(durationSeconds);\n      mediaRecorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          audioChunksRef.current.push(event.data);\n        }\n      };\n      mediaRecorder.onstart = () => {\n        setIsRecording(true);\n        setShowToast(true);\n        setSaveMessage(\"Recording in progress...\");\n        countdownIntervalRef.current = setInterval(() => {\n          setCountdown(prev => {\n            if (prev <= 1) {\n              stopRecording();\n              return 0;\n            }\n            return prev - 1;\n          });\n        }, 1000);\n      };\n      mediaRecorder.onstop = async () => {\n        clearInterval(countdownIntervalRef.current);\n        setCountdown(0);\n        setIsRecording(false);\n        setRecordingDuration(0);\n        setSaveMessage(\"\");\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: \"audio/webm\"\n        });\n        try {\n          const formData = new FormData();\n          formData.append(\"file\", audioBlob, \"recording.webm\");\n          formData.append(\"user\", user);\n          const response = await fetch(PROXY_API_URL, {\n            method: \"POST\",\n            body: formData\n          });\n          if (!response.ok) throw new Error(`Transcription failed: ${response.statusText}`);\n          const data = await response.json();\n          if (data.transcription) {\n            setEntry(data.transcription);\n            setSaveMessage(\"Transcription received. Please review and save manually.\");\n            setShowToast(true);\n          } else {\n            setSaveMessage(\"No transcription received.\");\n            setShowToast(true);\n          }\n        } catch (error) {\n          setSaveMessage(\"Error during transcription: \" + error.message);\n          setShowToast(true);\n        }\n      };\n      mediaRecorder.start();\n    } catch (err) {\n      setSaveMessage(\"Could not start recording: \" + err.message);\n      setShowToast(true);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\") {\n      mediaRecorderRef.current.stop();\n    }\n    clearInterval(countdownIntervalRef.current);\n    setIsRecording(false);\n  };\n  const saveToGoogleSheet = async (date, time, text, username) => {\n    const SAVE_API_URL = window.location.hostname === \"localhost\" ? \"http://localhost:8090/saveEntry\" : \"https://journal-whisper.onrender.com/saveEntry\";\n    try {\n      console.log(`💾 Saving entry:`, {\n        date,\n        time,\n        entry: text,\n        user: username\n      });\n      const response = await fetch(SAVE_API_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          date,\n          time,\n          entry: text,\n          user: username\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(`❌ Save Error: ${response.status}`, errorText);\n        throw new Error(`Failed to save entry to Google Sheets: ${response.status}`);\n      }\n      const result = await response.json();\n      console.log(`✅ Save successful:`, result);\n      return result;\n    } catch (error) {\n      console.error(`❌ Save error:`, error);\n      setSaveMessage(\"Error saving to Google Sheets: \" + error.message);\n      setShowToast(true);\n      return null;\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!entry.trim()) {\n      setSaveMessage(\"Please enter something before saving.\");\n      setShowToast(true);\n      return;\n    }\n\n    // Animate click: scale down quickly then back up\n    setSaveClickAnimating(true);\n    setTimeout(() => setSaveClickAnimating(false), 150);\n    const result = await saveToGoogleSheet(currentTimestamp.date, currentTimestamp.time, entry, user);\n    if (result) {\n      setSaveAnimating(true);\n      setTimeout(() => setSaveAnimating(false), 500);\n      setSaveMessage(\"Journal entry saved successfully!\");\n      setShowToast(true);\n\n      // Add the new entry to the current entries list at the top (most recent first)\n      const newEntry = {\n        time: currentTimestamp.time,\n        entry: entry\n      };\n      const savedDate = new Date(currentTimestamp.date + \"T00:00:00\");\n      const currentDateKey = formatDateLocal(savedDate);\n\n      // Only update entries if we're viewing the same date as we're saving to\n      const selectedDateKey = formatDateLocal(selectedDate);\n      if (currentDateKey === selectedDateKey) {\n        // Update both the displayed entries and the cache\n        setEntriesForDate(prevEntries => [newEntry, ...prevEntries]);\n        setEntriesCache(prev => ({\n          ...prev,\n          [currentDateKey]: [newEntry, ...(prev[currentDateKey] || [])]\n        }));\n      } else {\n        // If saving to a different date, just update the cache and switch to that date\n        setEntriesCache(prev => ({\n          ...prev,\n          [currentDateKey]: [newEntry, ...(prev[currentDateKey] || [])]\n        }));\n        setSelectedDate(savedDate);\n      }\n      setEntry(\"\");\n      setCurrentTimestamp(generateTimestamp());\n      setLocalEntries(prev => ({\n        ...prev,\n        [currentDateKey]: entry\n      }));\n    } else {\n      setSaveMessage(\"Failed to save entry. Please try again.\");\n      setShowToast(true);\n    }\n  };\n  const handleRefreshTime = () => {\n    setCurrentTimestamp(generateTimestamp());\n    setSaveMessage(\"\");\n  };\n\n  // DEBUG: Add manual refresh function\n  const handleRefreshEntries = () => {\n    console.log(`🔄 Manual refresh requested for ${formatDateLocal(selectedDate)}`);\n    fetchEntriesForDate(selectedDate, true); // Force refresh\n  };\n  useEffect(() => {\n    return () => {\n      if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\") {\n        mediaRecorderRef.current.stop();\n      }\n      clearInterval(countdownIntervalRef.current);\n    };\n  }, []);\n  useEffect(() => {\n    if (saveMessage) {\n      const timer = setTimeout(() => setSaveMessage(\"\"), 6000);\n      return () => clearTimeout(timer);\n    }\n  }, [saveMessage]);\n  const getButtonProgress = () => {\n    if (recordingDuration === 0) return \"0%\";\n    const percent = (recordingDuration - countdown) / recordingDuration * 100;\n    return `${percent}%`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: \"100vh\",\n      backgroundColor: \"#FFF8E7\",\n      padding: \"2rem\",\n      fontFamily: \"sans-serif\",\n      maxWidth: 700,\n      margin: \"auto\",\n      color: \"#222\"\n    },\n    children: [showToast && saveMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: \"40px\",\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        backgroundColor: \"#333\",\n        color: \"white\",\n        padding: \"10px 20px\",\n        borderRadius: \"20px\",\n        boxShadow: \"0 2px 10px rgba(0,0,0,0.7)\",\n        zIndex: 9999,\n        fontSize: \"1rem\",\n        opacity: 0.9,\n        userSelect: \"none\"\n      },\n      \"aria-live\": \"polite\",\n      children: saveMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 9\n    }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#e8f4fd\",\n        border: \"1px solid #bee5eb\",\n        borderRadius: \"4px\",\n        padding: \"0.75rem\",\n        marginBottom: \"1rem\",\n        fontSize: \"0.9rem\",\n        color: \"#0c5460\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Debug:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }, this), \" \", debugInfo]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        marginBottom: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"My Logo\",\n        style: {\n          maxWidth: \"150px\",\n          height: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"User:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this), \" \", user, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogout,\n          style: {\n            marginLeft: \"1rem\",\n            padding: \"0.3rem 0.75rem\",\n            fontSize: \"1rem\",\n            cursor: \"pointer\",\n            borderRadius: \"6px\",\n            border: \"1px solid #888\",\n            backgroundColor: \"#f0f0f0\",\n            color: \"#333\"\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"1rem\",\n        marginBottom: \"1rem\",\n        justifyContent: \"center\"\n      },\n      children: [{\n        label: \"30s\",\n        duration: 30\n      }, {\n        label: \"60s\",\n        duration: 60\n      }, {\n        label: \"180s\",\n        duration: 180\n      }].map(({\n        label,\n        duration\n      }) => {\n        const isActive = isRecording && recordingDuration === duration;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (isActive) {\n              stopRecording();\n            } else if (!isRecording) {\n              startRecording(duration);\n            }\n          },\n          disabled: isRecording && recordingDuration !== duration,\n          style: {\n            position: \"relative\",\n            height: \"60px\",\n            width: \"60px\",\n            borderRadius: isActive ? \"8px\" : \"50%\",\n            border: \"none\",\n            backgroundColor: isActive ? \"#FF0000\" : \"#FFD700\",\n            color: \"#000\",\n            fontSize: \"0.9rem\",\n            fontWeight: \"bold\",\n            boxShadow: isActive ? \"0 0 10px #ff4444\" : \"none\",\n            cursor: isRecording && recordingDuration !== duration ? \"not-allowed\" : \"pointer\",\n            transition: \"all 0.3s ease\",\n            userSelect: \"none\"\n          },\n          title: label,\n          children: [!isActive && label, isActive && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"absolute\",\n              bottom: 0,\n              left: 0,\n              height: \"8px\",\n              background: \"#27ae60\",\n              width: getButtonProgress(),\n              transition: \"width 0.3s ease\",\n              borderRadius: \"0 0 8px 8px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 17\n          }, this)]\n        }, label, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: \"1rem\",\n        fontSize: \"1.1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\uD83D\\uDCC5 \", currentTimestamp.date, \" \\uD83D\\uDD52 \", currentTimestamp.time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRefreshTime,\n        style: {\n          marginLeft: \"1rem\",\n          padding: \"0.3rem 0.75rem\",\n          fontSize: \"0.9rem\",\n          cursor: \"pointer\",\n          borderRadius: \"6px\",\n          border: \"1px solid #888\",\n          backgroundColor: \"#f0f0f0\",\n          color: \"#333\"\n        },\n        title: \"Refresh timestamp\",\n        children: \"Refresh Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Write your journal entry here...\",\n        value: entry,\n        onChange: e => setEntry(e.target.value),\n        style: {\n          width: \"100%\",\n          height: \"150px\",\n          fontSize: \"1rem\",\n          padding: \"0.75rem\",\n          borderRadius: 8,\n          border: \"1px solid #ccc\",\n          resize: \"vertical\",\n          marginBottom: \"1rem\",\n          fontFamily: \"inherit\"\n        },\n        disabled: isRecording\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"right\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isRecording,\n          style: {\n            padding: \"0.6rem 1.5rem\",\n            fontSize: \"1rem\",\n            backgroundColor: saveAnimating ? \"#2ecc71\" : \"#27ae60\",\n            transform: saveAnimating ? \"scale(1.05)\" : saveClickAnimating ? \"scale(0.95)\" : \"scale(1)\",\n            transition: \"transform 0.15s ease\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"8px\",\n            cursor: isRecording ? \"not-allowed\" : \"pointer\",\n            userSelect: \"none\",\n            fontWeight: \"600\"\n          },\n          children: \"Save Entry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: \"2rem 0\",\n        borderColor: \"#ccc\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: \"1rem\"\n      },\n      children: \"\\uD83D\\uDCC5 Journal Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: date => {\n          setSelectedDate(date);\n          setShowToast(false);\n          setSaveMessage(\"\");\n        },\n        value: selectedDate,\n        locale: \"en-US\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"1rem\",\n        padding: \"1rem\",\n        backgroundColor: \"#f9f9f9\",\n        borderRadius: \"8px\",\n        border: \"1px solid #ccc\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Entries for \", formatDateLocal(selectedDate), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRefreshEntries,\n          style: {\n            padding: \"0.3rem 0.75rem\",\n            fontSize: \"0.9rem\",\n            cursor: \"pointer\",\n            borderRadius: \"6px\",\n            border: \"1px solid #888\",\n            backgroundColor: \"#f0f0f0\",\n            color: \"#333\"\n          },\n          title: \"Refresh entries for this date\",\n          children: \"\\uD83D\\uDD04 Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }, this), isLoadingEntries ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          color: \"#666\",\n          fontStyle: \"italic\",\n          padding: \"1rem\"\n        },\n        children: \"Loading entries...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 11\n      }, this) : entriesForDate.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: \"0.9rem\",\n            color: \"#666\",\n            marginBottom: \"1rem\",\n            fontStyle: \"italic\"\n          },\n          children: [\"(\", entriesForDate.length, \" \", entriesForDate.length === 1 ? 'entry' : 'entries', \" found - Most Recent First)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 13\n        }, this), entriesForDate.map(({\n          time,\n          entry\n        }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"1rem\",\n            borderBottom: index < entriesForDate.length - 1 ? \"1px solid #ddd\" : \"none\",\n            paddingBottom: \"0.5rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: \"bold\",\n              fontSize: \"0.9rem\",\n              marginBottom: \"0.5rem\",\n              color: \"#555\",\n              borderBottom: \"1px solid #eee\",\n              paddingBottom: \"0.25rem\"\n            },\n            children: time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              whiteSpace: \"pre-wrap\",\n              paddingTop: \"0.25rem\",\n              lineHeight: \"1.4\"\n            },\n            children: entry\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 17\n          }, this)]\n        }, `${time}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          color: \"#666\",\n          fontStyle: \"italic\",\n          padding: \"1rem\"\n        },\n        children: \"No entries found for this date.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 369,\n    columnNumber: 5\n  }, this);\n}\n_s(Journal, \"HOSHcZJARbMo/2wipp6pCqtMODs=\");\n_c = Journal;\nvar _c;\n$RefreshReg$(_c, \"Journal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Calendar","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","PROXY_API_URL","window","location","hostname","formatDateLocal","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","Journal","user","onLogout","_s","entry","setEntry","isRecording","setIsRecording","showToast","setShowToast","saveMessage","setSaveMessage","currentTimestamp","setCurrentTimestamp","time","countdown","setCountdown","recordingDuration","setRecordingDuration","selectedDate","setSelectedDate","Date","entriesForDate","setEntriesForDate","localEntries","setLocalEntries","entriesCache","setEntriesCache","saveAnimating","setSaveAnimating","saveClickAnimating","setSaveClickAnimating","isLoadingEntries","setIsLoadingEntries","debugInfo","setDebugInfo","mediaRecorderRef","audioChunksRef","countdownIntervalRef","generateTimestamp","now","toLocaleTimeString","fetchEntriesForDate","dateToFetch","forceRefresh","dateKey","console","log","length","FETCH_API_URL","response","fetch","method","headers","body","JSON","stringify","status","statusText","ok","errorText","text","error","Error","data","json","sortedEntries","entries","sort","a","b","timeA","timeB","prev","err","message","startRecording","durationSeconds","navigator","mediaDevices","getUserMedia","stream","audio","mediaRecorder","MediaRecorder","current","ondataavailable","event","size","push","onstart","setInterval","stopRecording","onstop","clearInterval","audioBlob","Blob","type","formData","FormData","append","transcription","start","state","stop","saveToGoogleSheet","username","SAVE_API_URL","result","handleSubmit","e","preventDefault","trim","setTimeout","newEntry","savedDate","currentDateKey","selectedDateKey","prevEntries","handleRefreshTime","handleRefreshEntries","timer","clearTimeout","getButtonProgress","percent","style","minHeight","backgroundColor","padding","fontFamily","maxWidth","margin","color","children","position","top","left","transform","borderRadius","boxShadow","zIndex","fontSize","opacity","userSelect","fileName","_jsxFileName","lineNumber","columnNumber","border","marginBottom","display","justifyContent","alignItems","src","alt","height","onClick","marginLeft","cursor","gap","label","duration","map","isActive","disabled","width","fontWeight","transition","title","bottom","background","textAlign","onSubmit","placeholder","value","onChange","target","resize","borderColor","locale","marginTop","fontStyle","index","borderBottom","paddingBottom","whiteSpace","paddingTop","lineHeight","_c","$RefreshReg$"],"sources":["/Users/hye/Documents/journal-whisper/src/Journal.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport logo from \"./assets/logo.png\";\n\nconst PROXY_API_URL =\n  window.location.hostname === \"localhost\"\n    ? \"http://localhost:8090/transcribeAudio\"\n    : \"https://journal-whisper.onrender.com/transcribeAudio\";\n\nconst formatDateLocal = (date) => {\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getDate()).padStart(2, \"0\");\n  return `${year}-${month}-${day}`;\n};\n\nexport default function Journal({ user, onLogout }) {\n  const [entry, setEntry] = useState(\"\");\n  const [isRecording, setIsRecording] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const [saveMessage, setSaveMessage] = useState(\"\");\n  const [currentTimestamp, setCurrentTimestamp] = useState({\n    date: \"\",\n    time: \"\",\n  });\n  const [countdown, setCountdown] = useState(0);\n  const [recordingDuration, setRecordingDuration] = useState(0);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [entriesForDate, setEntriesForDate] = useState([]);\n  const [localEntries, setLocalEntries] = useState({});\n  const [entriesCache, setEntriesCache] = useState({}); // Cache for fetched entries\n  const [saveAnimating, setSaveAnimating] = useState(false);\n  const [saveClickAnimating, setSaveClickAnimating] = useState(false);\n  const [isLoadingEntries, setIsLoadingEntries] = useState(false);\n  \n  // DEBUG: Add state for debugging\n  const [debugInfo, setDebugInfo] = useState(\"\");\n\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const countdownIntervalRef = useRef(null);\n\n  const generateTimestamp = () => {\n    const now = new Date();\n    return {\n      date: formatDateLocal(now),\n      time: now.toLocaleTimeString(),\n    };\n  };\n\n  useEffect(() => {\n    setCurrentTimestamp(generateTimestamp());\n  }, []);\n\n  const fetchEntriesForDate = async (dateToFetch, forceRefresh = false) => {\n    const dateKey = formatDateLocal(dateToFetch);\n    \n    // DEBUG: Log the request details\n    console.log(`🔍 Fetching entries for date: ${dateKey}, user: ${user}`);\n    setDebugInfo(`Fetching entries for ${dateKey} (user: ${user})`);\n    \n    // Check cache first (unless force refresh)\n    if (!forceRefresh && entriesCache[dateKey]) {\n      console.log(`📋 Using cached entries for ${dateKey}:`, entriesCache[dateKey]);\n      setEntriesForDate(entriesCache[dateKey]);\n      setDebugInfo(`Used cached data for ${dateKey} (${entriesCache[dateKey].length} entries)`);\n      return;\n    }\n\n    setIsLoadingEntries(true);\n\n    const FETCH_API_URL =\n      window.location.hostname === \"localhost\"\n        ? \"http://localhost:8090/getEntries\"\n        : \"https://journal-whisper.onrender.com/getEntries\";\n\n    try {\n      console.log(`📡 Making API request to: ${FETCH_API_URL}`);\n      console.log(`📦 Request payload:`, { user, date: dateKey });\n      \n      const response = await fetch(FETCH_API_URL, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          user,\n          date: dateKey,\n        }),\n      });\n      \n      console.log(`📊 Response status: ${response.status} ${response.statusText}`);\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(`❌ API Error: ${response.status} ${response.statusText}`, errorText);\n        setDebugInfo(`API Error: ${response.status} - ${errorText}`);\n        throw new Error(`Failed to fetch entries: ${response.status} ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      console.log(`📋 Raw API response:`, data);\n      \n      // Sort entries by time in descending order (most recent first)\n      const sortedEntries = (data.entries || []).sort((a, b) => {\n        // Convert time strings to comparable format\n        const timeA = new Date(`1970-01-01 ${a.time}`);\n        const timeB = new Date(`1970-01-01 ${b.time}`);\n        return timeB - timeA; // Descending order\n      });\n      \n      console.log(`✅ Processed entries for ${dateKey}:`, sortedEntries);\n      setDebugInfo(`Found ${sortedEntries.length} entries for ${dateKey}`);\n      \n      // Update cache and state\n      setEntriesCache(prev => ({\n        ...prev,\n        [dateKey]: sortedEntries\n      }));\n      setEntriesForDate(sortedEntries);\n    } catch (err) {\n      console.error(`❌ Error fetching entries:`, err);\n      setDebugInfo(`Error: ${err.message}`);\n      setEntriesForDate([]);\n      // Cache empty result to avoid repeated failed requests\n      setEntriesCache(prev => ({\n        ...prev,\n        [dateKey]: []\n      }));\n    } finally {\n      setIsLoadingEntries(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchEntriesForDate(selectedDate);\n    setEntry(\"\");\n    setShowToast(false);\n    setSaveMessage(\"\");\n  }, [selectedDate, user]);\n\n  const startRecording = async (durationSeconds) => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      setSaveMessage(\"Audio recording not supported in this browser.\");\n      setShowToast(true);\n      return;\n    }\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      audioChunksRef.current = [];\n\n      setRecordingDuration(durationSeconds);\n      setCurrentTimestamp(generateTimestamp());\n      setCountdown(durationSeconds);\n\n      mediaRecorder.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          audioChunksRef.current.push(event.data);\n        }\n      };\n\n      mediaRecorder.onstart = () => {\n        setIsRecording(true);\n        setShowToast(true);\n        setSaveMessage(\"Recording in progress...\");\n        countdownIntervalRef.current = setInterval(() => {\n          setCountdown((prev) => {\n            if (prev <= 1) {\n              stopRecording();\n              return 0;\n            }\n            return prev - 1;\n          });\n        }, 1000);\n      };\n\n      mediaRecorder.onstop = async () => {\n        clearInterval(countdownIntervalRef.current);\n        setCountdown(0);\n        setIsRecording(false);\n        setRecordingDuration(0);\n        setSaveMessage(\"\");\n\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: \"audio/webm\",\n        });\n        try {\n          const formData = new FormData();\n          formData.append(\"file\", audioBlob, \"recording.webm\");\n          formData.append(\"user\", user);\n\n          const response = await fetch(PROXY_API_URL, {\n            method: \"POST\",\n            body: formData,\n          });\n\n          if (!response.ok)\n            throw new Error(`Transcription failed: ${response.statusText}`);\n\n          const data = await response.json();\n          if (data.transcription) {\n            setEntry(data.transcription);\n            setSaveMessage(\n              \"Transcription received. Please review and save manually.\"\n            );\n            setShowToast(true);\n          } else {\n            setSaveMessage(\"No transcription received.\");\n            setShowToast(true);\n          }\n        } catch (error) {\n          setSaveMessage(\"Error during transcription: \" + error.message);\n          setShowToast(true);\n        }\n      };\n\n      mediaRecorder.start();\n    } catch (err) {\n      setSaveMessage(\"Could not start recording: \" + err.message);\n      setShowToast(true);\n    }\n  };\n\n  const stopRecording = () => {\n    if (\n      mediaRecorderRef.current &&\n      mediaRecorderRef.current.state !== \"inactive\"\n    ) {\n      mediaRecorderRef.current.stop();\n    }\n    clearInterval(countdownIntervalRef.current);\n    setIsRecording(false);\n  };\n\n  const saveToGoogleSheet = async (date, time, text, username) => {\n    const SAVE_API_URL =\n      window.location.hostname === \"localhost\"\n        ? \"http://localhost:8090/saveEntry\"\n        : \"https://journal-whisper.onrender.com/saveEntry\";\n\n    try {\n      console.log(`💾 Saving entry:`, { date, time, entry: text, user: username });\n      \n      const response = await fetch(SAVE_API_URL, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ date, time, entry: text, user: username }),\n      });\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(`❌ Save Error: ${response.status}`, errorText);\n        throw new Error(`Failed to save entry to Google Sheets: ${response.status}`);\n      }\n      \n      const result = await response.json();\n      console.log(`✅ Save successful:`, result);\n      return result;\n    } catch (error) {\n      console.error(`❌ Save error:`, error);\n      setSaveMessage(\"Error saving to Google Sheets: \" + error.message);\n      setShowToast(true);\n      return null;\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!entry.trim()) {\n      setSaveMessage(\"Please enter something before saving.\");\n      setShowToast(true);\n      return;\n    }\n\n    // Animate click: scale down quickly then back up\n    setSaveClickAnimating(true);\n    setTimeout(() => setSaveClickAnimating(false), 150);\n\n    const result = await saveToGoogleSheet(\n      currentTimestamp.date,\n      currentTimestamp.time,\n      entry,\n      user\n    );\n    if (result) {\n      setSaveAnimating(true);\n      setTimeout(() => setSaveAnimating(false), 500);\n      setSaveMessage(\"Journal entry saved successfully!\");\n      setShowToast(true);\n\n      // Add the new entry to the current entries list at the top (most recent first)\n      const newEntry = {\n        time: currentTimestamp.time,\n        entry: entry,\n      };\n      \n      const savedDate = new Date(currentTimestamp.date + \"T00:00:00\");\n      const currentDateKey = formatDateLocal(savedDate);\n      \n      // Only update entries if we're viewing the same date as we're saving to\n      const selectedDateKey = formatDateLocal(selectedDate);\n      if (currentDateKey === selectedDateKey) {\n        // Update both the displayed entries and the cache\n        setEntriesForDate(prevEntries => [newEntry, ...prevEntries]);\n        setEntriesCache(prev => ({\n          ...prev,\n          [currentDateKey]: [newEntry, ...(prev[currentDateKey] || [])]\n        }));\n      } else {\n        // If saving to a different date, just update the cache and switch to that date\n        setEntriesCache(prev => ({\n          ...prev,\n          [currentDateKey]: [newEntry, ...(prev[currentDateKey] || [])]\n        }));\n        setSelectedDate(savedDate);\n      }\n\n      setEntry(\"\");\n      setCurrentTimestamp(generateTimestamp());\n\n      setLocalEntries((prev) => ({\n        ...prev,\n        [currentDateKey]: entry,\n      }));\n    } else {\n      setSaveMessage(\"Failed to save entry. Please try again.\");\n      setShowToast(true);\n    }\n  };\n\n  const handleRefreshTime = () => {\n    setCurrentTimestamp(generateTimestamp());\n    setSaveMessage(\"\");\n  };\n\n  // DEBUG: Add manual refresh function\n  const handleRefreshEntries = () => {\n    console.log(`🔄 Manual refresh requested for ${formatDateLocal(selectedDate)}`);\n    fetchEntriesForDate(selectedDate, true); // Force refresh\n  };\n\n  useEffect(() => {\n    return () => {\n      if (\n        mediaRecorderRef.current &&\n        mediaRecorderRef.current.state !== \"inactive\"\n      ) {\n        mediaRecorderRef.current.stop();\n      }\n      clearInterval(countdownIntervalRef.current);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (saveMessage) {\n      const timer = setTimeout(() => setSaveMessage(\"\"), 6000);\n      return () => clearTimeout(timer);\n    }\n  }, [saveMessage]);\n\n  const getButtonProgress = () => {\n    if (recordingDuration === 0) return \"0%\";\n    const percent = ((recordingDuration - countdown) / recordingDuration) * 100;\n    return `${percent}%`;\n  };\n\n  return (\n    <div\n      style={{\n        minHeight: \"100vh\",\n        backgroundColor: \"#FFF8E7\",\n        padding: \"2rem\",\n        fontFamily: \"sans-serif\",\n        maxWidth: 700,\n        margin: \"auto\",\n        color: \"#222\",\n      }}\n    >\n      {showToast && saveMessage && (\n        <div\n          style={{\n            position: \"fixed\",\n            top: \"40px\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n            backgroundColor: \"#333\",\n            color: \"white\",\n            padding: \"10px 20px\",\n            borderRadius: \"20px\",\n            boxShadow: \"0 2px 10px rgba(0,0,0,0.7)\",\n            zIndex: 9999,\n            fontSize: \"1rem\",\n            opacity: 0.9,\n            userSelect: \"none\",\n          }}\n          aria-live=\"polite\"\n        >\n          {saveMessage}\n        </div>\n      )}\n\n      {/* DEBUG INFO */}\n      {debugInfo && (\n        <div\n          style={{\n            backgroundColor: \"#e8f4fd\",\n            border: \"1px solid #bee5eb\",\n            borderRadius: \"4px\",\n            padding: \"0.75rem\",\n            marginBottom: \"1rem\",\n            fontSize: \"0.9rem\",\n            color: \"#0c5460\",\n          }}\n        >\n          <strong>Debug:</strong> {debugInfo}\n        </div>\n      )}\n\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          marginBottom: \"1rem\",\n        }}\n      >\n        <img\n          src={logo}\n          alt=\"My Logo\"\n          style={{ maxWidth: \"150px\", height: \"auto\" }}\n        />\n        <div>\n          <strong>User:</strong> {user}\n          <button\n            onClick={onLogout}\n            style={{\n              marginLeft: \"1rem\",\n              padding: \"0.3rem 0.75rem\",\n              fontSize: \"1rem\",\n              cursor: \"pointer\",\n              borderRadius: \"6px\",\n              border: \"1px solid #888\",\n              backgroundColor: \"#f0f0f0\",\n              color: \"#333\",\n            }}\n          >\n            Logout\n          </button>\n        </div>\n      </div>\n\n      {/* Recording buttons */}\n      <div\n        style={{\n          display: \"flex\",\n          gap: \"1rem\",\n          marginBottom: \"1rem\",\n          justifyContent: \"center\",\n        }}\n      >\n        {[\n          { label: \"30s\", duration: 30 },\n          { label: \"60s\", duration: 60 },\n          { label: \"180s\", duration: 180 },\n        ].map(({ label, duration }) => {\n          const isActive = isRecording && recordingDuration === duration;\n          return (\n            <button\n              key={label}\n              onClick={() => {\n                if (isActive) {\n                  stopRecording();\n                } else if (!isRecording) {\n                  startRecording(duration);\n                }\n              }}\n              disabled={isRecording && recordingDuration !== duration}\n              style={{\n                position: \"relative\",\n                height: \"60px\",\n                width: \"60px\",\n                borderRadius: isActive ? \"8px\" : \"50%\",\n                border: \"none\",\n                backgroundColor: isActive ? \"#FF0000\" : \"#FFD700\",\n                color: \"#000\",\n                fontSize: \"0.9rem\",\n                fontWeight: \"bold\",\n                boxShadow: isActive ? \"0 0 10px #ff4444\" : \"none\",\n                cursor:\n                  isRecording && recordingDuration !== duration\n                    ? \"not-allowed\"\n                    : \"pointer\",\n                transition: \"all 0.3s ease\",\n                userSelect: \"none\",\n              }}\n              title={label}\n            >\n              {!isActive && label}\n              {isActive && (\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: 0,\n                    left: 0,\n                    height: \"8px\",\n                    background: \"#27ae60\",\n                    width: getButtonProgress(),\n                    transition: \"width 0.3s ease\",\n                    borderRadius: \"0 0 8px 8px\",\n                  }}\n                />\n              )}\n            </button>\n          );\n        })}\n      </div>\n\n      {/* Timestamp */}\n      <div\n        style={{\n          textAlign: \"center\",\n          marginBottom: \"1rem\",\n          fontSize: \"1.1rem\",\n        }}\n      >\n        <span>\n          📅 {currentTimestamp.date} 🕒 {currentTimestamp.time}\n        </span>\n        <button\n          onClick={handleRefreshTime}\n          style={{\n            marginLeft: \"1rem\",\n            padding: \"0.3rem 0.75rem\",\n            fontSize: \"0.9rem\",\n            cursor: \"pointer\",\n            borderRadius: \"6px\",\n            border: \"1px solid #888\",\n            backgroundColor: \"#f0f0f0\",\n            color: \"#333\",\n          }}\n          title=\"Refresh timestamp\"\n        >\n          Refresh Time\n        </button>\n      </div>\n\n      <form onSubmit={handleSubmit}>\n        <textarea\n          placeholder=\"Write your journal entry here...\"\n          value={entry}\n          onChange={(e) => setEntry(e.target.value)}\n          style={{\n            width: \"100%\",\n            height: \"150px\",\n            fontSize: \"1rem\",\n            padding: \"0.75rem\",\n            borderRadius: 8,\n            border: \"1px solid #ccc\",\n            resize: \"vertical\",\n            marginBottom: \"1rem\",\n            fontFamily: \"inherit\",\n          }}\n          disabled={isRecording}\n        />\n        <div style={{ textAlign: \"right\" }}>\n          <button\n            type=\"submit\"\n            disabled={isRecording}\n            style={{\n              padding: \"0.6rem 1.5rem\",\n              fontSize: \"1rem\",\n              backgroundColor: saveAnimating ? \"#2ecc71\" : \"#27ae60\",\n              transform: saveAnimating\n                ? \"scale(1.05)\"\n                : saveClickAnimating\n                ? \"scale(0.95)\"\n                : \"scale(1)\",\n              transition: \"transform 0.15s ease\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"8px\",\n              cursor: isRecording ? \"not-allowed\" : \"pointer\",\n              userSelect: \"none\",\n              fontWeight: \"600\",\n            }}\n          >\n            Save Entry\n          </button>\n        </div>\n      </form>\n\n      <hr style={{ margin: \"2rem 0\", borderColor: \"#ccc\" }} />\n      <h2 style={{ textAlign: \"center\", marginBottom: \"1rem\" }}>\n        📅 Journal Calendar\n      </h2>\n\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Calendar\n          onChange={(date) => {\n            setSelectedDate(date);\n            setShowToast(false);\n            setSaveMessage(\"\");\n          }}\n          value={selectedDate}\n          locale=\"en-US\"\n        />\n      </div>\n\n      {/* Entries section - now always shows something */}\n      <div\n        style={{\n          marginTop: \"1rem\",\n          padding: \"1rem\",\n          backgroundColor: \"#f9f9f9\",\n          borderRadius: \"8px\",\n          border: \"1px solid #ccc\",\n        }}\n      >\n        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n          <h3>Entries for {formatDateLocal(selectedDate)}:</h3>\n          <button\n            onClick={handleRefreshEntries}\n            style={{\n              padding: \"0.3rem 0.75rem\",\n              fontSize: \"0.9rem\",\n              cursor: \"pointer\",\n              borderRadius: \"6px\",\n              border: \"1px solid #888\",\n              backgroundColor: \"#f0f0f0\",\n              color: \"#333\",\n            }}\n            title=\"Refresh entries for this date\"\n          >\n            🔄 Refresh\n          </button>\n        </div>\n        \n        {isLoadingEntries ? (\n          <div style={{ \n            textAlign: \"center\", \n            color: \"#666\", \n            fontStyle: \"italic\",\n            padding: \"1rem\" \n          }}>\n            Loading entries...\n          </div>\n        ) : entriesForDate.length > 0 ? (\n          <>\n            <div style={{ \n              fontSize: \"0.9rem\", \n              color: \"#666\", \n              marginBottom: \"1rem\",\n              fontStyle: \"italic\" \n            }}>\n              ({entriesForDate.length} {entriesForDate.length === 1 ? 'entry' : 'entries'} found - Most Recent First)\n            </div>\n            {entriesForDate.map(({ time, entry }, index) => (\n              <div\n                key={`${time}-${index}`}\n                style={{\n                  marginBottom: \"1rem\",\n                  borderBottom: index < entriesForDate.length - 1 ? \"1px solid #ddd\" : \"none\",\n                  paddingBottom: \"0.5rem\",\n                }}\n              >\n                <div\n                  style={{\n                    fontWeight: \"bold\",\n                    fontSize: \"0.9rem\",\n                    marginBottom: \"0.5rem\",\n                    color: \"#555\",\n                    borderBottom: \"1px solid #eee\",\n                    paddingBottom: \"0.25rem\",\n                  }}\n                >\n                  {time}\n                </div>\n                <div style={{ \n                  whiteSpace: \"pre-wrap\",\n                  paddingTop: \"0.25rem\",\n                  lineHeight: \"1.4\"\n                }}>\n                  {entry}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : (\n          <div style={{ \n            textAlign: \"center\", \n            color: \"#666\", \n            fontStyle: \"italic\",\n            padding: \"1rem\" \n          }}>\n            No entries found for this date.\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}