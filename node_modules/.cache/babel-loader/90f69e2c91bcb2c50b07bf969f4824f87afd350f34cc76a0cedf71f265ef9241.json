{"ast":null,"code":"var _jsxFileName = \"/Users/hye/Documents/my-journal-app/src/Journal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport logo from \"./assets/logo.png\"; // Adjust path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PROXY_API_URL = \"http://localhost:8090/saveEntry\"; // Your Google Sheets proxy\nconst WHISPER_API_URL = \"/api/whisper\"; // Your backend whisper endpoint\n\nexport default function Journal({\n  user,\n  onLogout\n}) {\n  _s();\n  // State hooks\n  const [isRecording, setIsRecording] = useState(false);\n  const [journalLines, setJournalLines] = useState([]); // lines of transcribed text\n  const [saveMessage, setSaveMessage] = useState(\"\");\n  const [showToast, setShowToast] = useState(false);\n  const [currentTimestamp, setCurrentTimestamp] = useState(generateTimestamp());\n  const [countdown, setCountdown] = useState(180); // 3 minutes countdown\n\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const countdownIntervalRef = useRef(null);\n\n  // Generate timestamp string\n  function generateTimestamp() {\n    const d = new Date();\n    return `ðŸ•’ ${d.toLocaleString()}`;\n  }\n\n  // Clear messages after a delay\n  useEffect(() => {\n    if (saveMessage) {\n      const timer = setTimeout(() => setSaveMessage(\"\"), 4000);\n      return () => clearTimeout(timer);\n    }\n  }, [saveMessage]);\n\n  // Save entry to Google Sheets backend\n  async function saveToGoogleSheet(timestamp, text, username) {\n    try {\n      const response = await fetch(PROXY_API_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          timestamp,\n          entry: text,\n          user: username\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to save entry to Google Sheets\");\n      return await response.json();\n    } catch (error) {\n      setSaveMessage(\"Error saving to Google Sheets: \" + error.message);\n      setShowToast(true);\n      return null;\n    }\n  }\n\n  // Start recording audio, handle MediaRecorder and streaming\n  const startRecording = async () => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      setSaveMessage(\"Audio recording is not supported in this browser.\");\n      setShowToast(true);\n      return;\n    }\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      audioChunksRef.current = [];\n      mediaRecorder.start();\n      setIsRecording(true);\n      setShowToast(true);\n      setSaveMessage(\"Recording started... speak now\");\n\n      // Collect audio data chunks\n      mediaRecorder.ondataavailable = event => {\n        if (event.data.size > 0) audioChunksRef.current.push(event.data);\n      };\n\n      // When recording stops, send audio blob to Whisper API\n      mediaRecorder.onstop = async () => {\n        setSaveMessage(\"Processing audio...\");\n        setShowToast(true);\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: \"audio/webm\"\n        });\n        const formData = new FormData();\n        formData.append(\"file\", audioBlob, \"recording.webm\");\n        try {\n          const res = await fetch(WHISPER_API_URL, {\n            method: \"POST\",\n            body: formData\n          });\n          if (!res.ok) throw new Error(\"Whisper API failed\");\n          const data = await res.json();\n\n          // Add the transcribed text as a new line in journal\n          if (data.text && data.text.trim().length > 0) {\n            setJournalLines(prev => [...prev, data.text.trim()]);\n            setSaveMessage(\"Transcription received\");\n          } else {\n            setSaveMessage(\"No speech detected\");\n          }\n        } catch (error) {\n          setSaveMessage(\"Error transcribing audio: \" + error.message);\n        }\n        setShowToast(true);\n      };\n\n      // Start countdown timer for 180 seconds max recording\n      setCountdown(180);\n      countdownIntervalRef.current = setInterval(() => {\n        setCountdown(prev => {\n          if (prev <= 1) {\n            stopRecording();\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } catch (err) {\n      setSaveMessage(\"Error accessing microphone: \" + err.message);\n      setShowToast(true);\n    }\n  };\n\n  // Stop recording and cleanup\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\") {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n    clearInterval(countdownIntervalRef.current);\n    setCountdown(180);\n    setIsRecording(false);\n    setShowToast(true);\n    setSaveMessage(\"Recording stopped\");\n  };\n\n  // Button handler toggles recording state\n  const handleRecordButtonClick = () => {\n    if (!isRecording) {\n      startRecording();\n    } else {\n      stopRecording();\n    }\n  };\n\n  // Save all journal lines concatenated as one entry\n  const handleSaveEntry = async e => {\n    e.preventDefault();\n    const text = journalLines.join(\"\\n\").trim();\n    if (!text) {\n      setSaveMessage(\"Please record or enter something before saving.\");\n      setShowToast(true);\n      return;\n    }\n    const result = await saveToGoogleSheet(currentTimestamp, text, user);\n    if (result) {\n      setSaveMessage(\"Journal entry saved successfully!\");\n      setShowToast(true);\n      setJournalLines([]);\n      setCurrentTimestamp(generateTimestamp());\n    } else {\n      setSaveMessage(\"Failed to save entry. Please try again.\");\n      setShowToast(true);\n    }\n  };\n\n  // Refresh timestamp\n  const handleRefreshTime = () => {\n    setCurrentTimestamp(generateTimestamp());\n  };\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\") mediaRecorderRef.current.stop();\n      clearInterval(countdownIntervalRef.current);\n    };\n  }, []);\n\n  // Progress bar width percentage\n  const countdownPercent = (180 - countdown) / 180 * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: \"100vh\",\n      backgroundColor: \"#FFF8E7\",\n      padding: \"2rem\",\n      fontFamily: \"sans-serif\",\n      maxWidth: 700,\n      margin: \"auto\",\n      color: \"#222\"\n    },\n    children: [isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"16px\",\n        backgroundColor: \"#d0f0d0\",\n        zIndex: 9999,\n        boxShadow: \"0 2px 5px rgba(0,0,0,0.1)\"\n      },\n      \"aria-label\": \"Recording countdown timer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: `${countdownPercent}%`,\n          height: \"100%\",\n          background: \"linear-gradient(90deg, #2ecc71, #27ae60)\",\n          transition: \"width 1s linear\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this), showToast && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: \"40px\",\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        backgroundColor: \"#333\",\n        color: \"white\",\n        padding: \"10px 20px\",\n        borderRadius: \"20px\",\n        boxShadow: \"0 2px 10px rgba(0,0,0,0.7)\",\n        zIndex: 9999,\n        fontSize: \"1rem\",\n        opacity: 0.9,\n        userSelect: \"none\"\n      },\n      \"aria-live\": \"polite\",\n      children: saveMessage || \"waiting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        marginBottom: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"My Logo\",\n        style: {\n          maxWidth: \"150px\",\n          height: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"User:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), \" \", user, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogout,\n          style: {\n            marginLeft: \"1rem\",\n            padding: \"0.3rem 0.75rem\",\n            fontSize: \"1rem\",\n            cursor: \"pointer\",\n            borderRadius: \"6px\",\n            border: \"1px solid #888\",\n            backgroundColor: \"#f0f0f0\",\n            color: \"#333\"\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSaveEntry,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: \"1.5rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"1rem\",\n            flexShrink: 0,\n            marginTop: \"4rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleRecordButtonClick,\n            style: {\n              backgroundColor: \"#e74c3c\",\n              // red color\n              color: \"white\",\n              fontSize: \"1.5rem\",\n              width: \"80px\",\n              height: \"80px\",\n              border: \"none\",\n              borderRadius: \"50%\",\n              cursor: \"pointer\",\n              boxShadow: \"0 0 15px 5px rgba(231, 76, 60, 0.7)\" // red glow\n            },\n            title: isRecording ? \"Stop recording\" : \"Start recording\",\n            children: isRecording ? \"Stop\" : \"Record\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            display: \"flex\",\n            flexDirection: \"column\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: \"0.5rem\",\n              marginBottom: \"0.5rem\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              readOnly: true,\n              value: currentTimestamp,\n              style: {\n                flexGrow: 1,\n                fontWeight: \"bold\",\n                fontSize: \"1.2rem\",\n                borderRadius: \"6px\",\n                border: \"1px solid #ccc\",\n                padding: \"0.3rem 0.6rem\",\n                backgroundColor: \"#f9f9f9\",\n                color: \"#333\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleRefreshTime,\n              style: {\n                padding: \"0.3rem 0.75rem\",\n                fontSize: \"1rem\",\n                cursor: \"pointer\",\n                borderRadius: \"6px\",\n                border: \"1px solid #888\",\n                backgroundColor: \"#f0f0f0\",\n                color: \"#333\",\n                fontWeight: \"bold\"\n              },\n              children: \"Refresh Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), !isRecording ?\n          /*#__PURE__*/\n          // Show full text area for editing when NOT recording\n          _jsxDEV(\"textarea\", {\n            rows: 12,\n            value: journalLines.join(\"\\n\"),\n            onChange: e => setJournalLines(e.target.value.split(\"\\n\")),\n            placeholder: \"Type or dictate your journal entry...\",\n            style: {\n              width: \"100%\",\n              padding: \"0.5rem\",\n              fontSize: \"1rem\",\n              borderRadius: \"6px\",\n              border: \"1px solid #ccc\",\n              backgroundColor: \"#fff\",\n              color: \"#222\",\n              whiteSpace: \"pre-wrap\",\n              resize: \"vertical\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this) :\n          /*#__PURE__*/\n          // Show \"diary\" visual lines during recording (readonly)\n          _jsxDEV(\"div\", {\n            style: {\n              backgroundColor: \"#fff\",\n              borderRadius: \"6px\",\n              border: \"1px solid #ccc\",\n              minHeight: \"192px\",\n              padding: \"0.5rem\",\n              fontSize: \"1rem\",\n              color: \"#222\",\n              whiteSpace: \"pre-wrap\",\n              overflowY: \"auto\"\n            },\n            \"aria-live\": \"polite\",\n            \"aria-label\": \"Transcribed diary text\",\n            children: journalLines.length === 0 ? /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"Speak now, your diary will appear here...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 19\n            }, this) : journalLines.map((line, idx) => /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: \"0 0 0.5rem 0\",\n                lineHeight: 1.4,\n                borderBottom: \"1px dashed #ccc\",\n                paddingBottom: \"0.2rem\"\n              },\n              children: line\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: {\n              marginTop: \"1rem\",\n              padding: \"0.6rem 1.2rem\",\n              fontSize: \"1.1rem\",\n              fontWeight: \"bold\",\n              color: \"#fff\",\n              backgroundColor: \"#2ecc71\",\n              border: \"none\",\n              borderRadius: \"6px\",\n              cursor: \"pointer\",\n              boxShadow: \"0 4px 6px rgba(46, 204, 113, 0.5)\",\n              alignSelf: \"flex-start\",\n              userSelect: \"none\"\n            },\n            disabled: journalLines.length === 0,\n            children: \"Save Journal Entry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n_s(Journal, \"3RImqJYnttPDKpb9MrsT2QibZRc=\");\n_c = Journal;\nvar _c;\n$RefreshReg$(_c, \"Journal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","logo","jsxDEV","_jsxDEV","PROXY_API_URL","WHISPER_API_URL","Journal","user","onLogout","_s","isRecording","setIsRecording","journalLines","setJournalLines","saveMessage","setSaveMessage","showToast","setShowToast","currentTimestamp","setCurrentTimestamp","generateTimestamp","countdown","setCountdown","mediaRecorderRef","audioChunksRef","countdownIntervalRef","d","Date","toLocaleString","timer","setTimeout","clearTimeout","saveToGoogleSheet","timestamp","text","username","response","fetch","method","headers","body","JSON","stringify","entry","ok","Error","json","error","message","startRecording","navigator","mediaDevices","getUserMedia","stream","audio","mediaRecorder","MediaRecorder","current","start","ondataavailable","event","data","size","push","onstop","audioBlob","Blob","type","formData","FormData","append","res","trim","length","prev","setInterval","stopRecording","err","state","stop","getTracks","forEach","track","clearInterval","handleRecordButtonClick","handleSaveEntry","e","preventDefault","join","result","handleRefreshTime","countdownPercent","style","minHeight","backgroundColor","padding","fontFamily","maxWidth","margin","color","children","position","top","left","width","height","zIndex","boxShadow","background","transition","fileName","_jsxFileName","lineNumber","columnNumber","transform","borderRadius","fontSize","opacity","userSelect","display","justifyContent","alignItems","marginBottom","src","alt","onClick","marginLeft","cursor","border","onSubmit","gap","flexDirection","flexShrink","marginTop","title","flex","readOnly","value","flexGrow","fontWeight","rows","onChange","target","split","placeholder","whiteSpace","resize","overflowY","map","line","idx","lineHeight","borderBottom","paddingBottom","alignSelf","disabled","_c","$RefreshReg$"],"sources":["/Users/hye/Documents/my-journal-app/src/Journal.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport logo from \"./assets/logo.png\"; // Adjust path as needed\n\nconst PROXY_API_URL = \"http://localhost:8090/saveEntry\"; // Your Google Sheets proxy\nconst WHISPER_API_URL = \"/api/whisper\"; // Your backend whisper endpoint\n\nexport default function Journal({ user, onLogout }) {\n  // State hooks\n  const [isRecording, setIsRecording] = useState(false);\n  const [journalLines, setJournalLines] = useState([]); // lines of transcribed text\n  const [saveMessage, setSaveMessage] = useState(\"\");\n  const [showToast, setShowToast] = useState(false);\n  const [currentTimestamp, setCurrentTimestamp] = useState(generateTimestamp());\n  const [countdown, setCountdown] = useState(180); // 3 minutes countdown\n\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const countdownIntervalRef = useRef(null);\n\n  // Generate timestamp string\n  function generateTimestamp() {\n    const d = new Date();\n    return `ðŸ•’ ${d.toLocaleString()}`;\n  }\n\n  // Clear messages after a delay\n  useEffect(() => {\n    if (saveMessage) {\n      const timer = setTimeout(() => setSaveMessage(\"\"), 4000);\n      return () => clearTimeout(timer);\n    }\n  }, [saveMessage]);\n\n  // Save entry to Google Sheets backend\n  async function saveToGoogleSheet(timestamp, text, username) {\n    try {\n      const response = await fetch(PROXY_API_URL, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ timestamp, entry: text, user: username }),\n      });\n      if (!response.ok)\n        throw new Error(\"Failed to save entry to Google Sheets\");\n      return await response.json();\n    } catch (error) {\n      setSaveMessage(\"Error saving to Google Sheets: \" + error.message);\n      setShowToast(true);\n      return null;\n    }\n  }\n\n  // Start recording audio, handle MediaRecorder and streaming\n  const startRecording = async () => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      setSaveMessage(\"Audio recording is not supported in this browser.\");\n      setShowToast(true);\n      return;\n    }\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      audioChunksRef.current = [];\n\n      mediaRecorder.start();\n      setIsRecording(true);\n      setShowToast(true);\n      setSaveMessage(\"Recording started... speak now\");\n\n      // Collect audio data chunks\n      mediaRecorder.ondataavailable = (event) => {\n        if (event.data.size > 0) audioChunksRef.current.push(event.data);\n      };\n\n      // When recording stops, send audio blob to Whisper API\n      mediaRecorder.onstop = async () => {\n        setSaveMessage(\"Processing audio...\");\n        setShowToast(true);\n\n        const audioBlob = new Blob(audioChunksRef.current, { type: \"audio/webm\" });\n        const formData = new FormData();\n        formData.append(\"file\", audioBlob, \"recording.webm\");\n\n        try {\n          const res = await fetch(WHISPER_API_URL, {\n            method: \"POST\",\n            body: formData,\n          });\n\n          if (!res.ok) throw new Error(\"Whisper API failed\");\n          const data = await res.json();\n\n          // Add the transcribed text as a new line in journal\n          if (data.text && data.text.trim().length > 0) {\n            setJournalLines((prev) => [...prev, data.text.trim()]);\n            setSaveMessage(\"Transcription received\");\n          } else {\n            setSaveMessage(\"No speech detected\");\n          }\n        } catch (error) {\n          setSaveMessage(\"Error transcribing audio: \" + error.message);\n        }\n        setShowToast(true);\n      };\n\n      // Start countdown timer for 180 seconds max recording\n      setCountdown(180);\n      countdownIntervalRef.current = setInterval(() => {\n        setCountdown((prev) => {\n          if (prev <= 1) {\n            stopRecording();\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } catch (err) {\n      setSaveMessage(\"Error accessing microphone: \" + err.message);\n      setShowToast(true);\n    }\n  };\n\n  // Stop recording and cleanup\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\") {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach((track) => track.stop());\n    }\n    clearInterval(countdownIntervalRef.current);\n    setCountdown(180);\n    setIsRecording(false);\n    setShowToast(true);\n    setSaveMessage(\"Recording stopped\");\n  };\n\n  // Button handler toggles recording state\n  const handleRecordButtonClick = () => {\n    if (!isRecording) {\n      startRecording();\n    } else {\n      stopRecording();\n    }\n  };\n\n  // Save all journal lines concatenated as one entry\n  const handleSaveEntry = async (e) => {\n    e.preventDefault();\n    const text = journalLines.join(\"\\n\").trim();\n    if (!text) {\n      setSaveMessage(\"Please record or enter something before saving.\");\n      setShowToast(true);\n      return;\n    }\n    const result = await saveToGoogleSheet(currentTimestamp, text, user);\n    if (result) {\n      setSaveMessage(\"Journal entry saved successfully!\");\n      setShowToast(true);\n      setJournalLines([]);\n      setCurrentTimestamp(generateTimestamp());\n    } else {\n      setSaveMessage(\"Failed to save entry. Please try again.\");\n      setShowToast(true);\n    }\n  };\n\n  // Refresh timestamp\n  const handleRefreshTime = () => {\n    setCurrentTimestamp(generateTimestamp());\n  };\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\")\n        mediaRecorderRef.current.stop();\n      clearInterval(countdownIntervalRef.current);\n    };\n  }, []);\n\n  // Progress bar width percentage\n  const countdownPercent = ((180 - countdown) / 180) * 100;\n\n  return (\n    <div\n      style={{\n        minHeight: \"100vh\",\n        backgroundColor: \"#FFF8E7\",\n        padding: \"2rem\",\n        fontFamily: \"sans-serif\",\n        maxWidth: 700,\n        margin: \"auto\",\n        color: \"#222\",\n      }}\n    >\n      {/* Progress Bar */}\n      {isRecording && (\n        <div\n          style={{\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"16px\",\n            backgroundColor: \"#d0f0d0\",\n            zIndex: 9999,\n            boxShadow: \"0 2px 5px rgba(0,0,0,0.1)\",\n          }}\n          aria-label=\"Recording countdown timer\"\n        >\n          <div\n            style={{\n              width: `${countdownPercent}%`,\n              height: \"100%\",\n              background: \"linear-gradient(90deg, #2ecc71, #27ae60)\",\n              transition: \"width 1s linear\",\n            }}\n          />\n        </div>\n      )}\n\n      {/* Toast Notification */}\n      {showToast && (\n        <div\n          style={{\n            position: \"fixed\",\n            top: \"40px\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n            backgroundColor: \"#333\",\n            color: \"white\",\n            padding: \"10px 20px\",\n            borderRadius: \"20px\",\n            boxShadow: \"0 2px 10px rgba(0,0,0,0.7)\",\n            zIndex: 9999,\n            fontSize: \"1rem\",\n            opacity: 0.9,\n            userSelect: \"none\",\n          }}\n          aria-live=\"polite\"\n        >\n          {saveMessage || \"waiting\"}\n        </div>\n      )}\n\n      {/* Header */}\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          marginBottom: \"1rem\",\n        }}\n      >\n        <img src={logo} alt=\"My Logo\" style={{ maxWidth: \"150px\", height: \"auto\" }} />\n        <div>\n          <strong>User:</strong> {user}\n          <button\n            onClick={onLogout}\n            style={{\n              marginLeft: \"1rem\",\n              padding: \"0.3rem 0.75rem\",\n              fontSize: \"1rem\",\n              cursor: \"pointer\",\n              borderRadius: \"6px\",\n              border: \"1px solid #888\",\n              backgroundColor: \"#f0f0f0\",\n              color: \"#333\",\n            }}\n          >\n            Logout\n          </button>\n        </div>\n      </div>\n\n      <form onSubmit={handleSaveEntry}>\n        <div style={{ display: \"flex\", gap: \"1.5rem\" }}>\n          {/* Record Button */}\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              gap: \"1rem\",\n              flexShrink: 0,\n              marginTop: \"4rem\",\n            }}\n          >\n            <button\n              type=\"button\"\n              onClick={handleRecordButtonClick}\n              style={{\n                backgroundColor: \"#e74c3c\", // red color\n                color: \"white\",\n                fontSize: \"1.5rem\",\n                width: \"80px\",\n                height: \"80px\",\n                border: \"none\",\n                borderRadius: \"50%\",\n                cursor: \"pointer\",\n                boxShadow: \"0 0 15px 5px rgba(231, 76, 60, 0.7)\", // red glow\n              }}\n              title={isRecording ? \"Stop recording\" : \"Start recording\"}\n            >\n              {isRecording ? \"Stop\" : \"Record\"}\n            </button>\n          </div>\n\n          {/* Timestamp + Journal Area */}\n          <div style={{ flex: 1, display: \"flex\", flexDirection: \"column\" }}>\n            {/* Timestamp and refresh */}\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: \"0.5rem\",\n                marginBottom: \"0.5rem\",\n              }}\n            >\n              <input\n                type=\"text\"\n                readOnly\n                value={currentTimestamp}\n                style={{\n                  flexGrow: 1,\n                  fontWeight: \"bold\",\n                  fontSize: \"1.2rem\",\n                  borderRadius: \"6px\",\n                  border: \"1px solid #ccc\",\n                  padding: \"0.3rem 0.6rem\",\n                  backgroundColor: \"#f9f9f9\",\n                  color: \"#333\",\n                }}\n              />\n              <button\n                type=\"button\"\n                onClick={handleRefreshTime}\n                style={{\n                  padding: \"0.3rem 0.75rem\",\n                  fontSize: \"1rem\",\n                  cursor: \"pointer\",\n                  borderRadius: \"6px\",\n                  border: \"1px solid #888\",\n                  backgroundColor: \"#f0f0f0\",\n                  color: \"#333\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Refresh Time\n              </button>\n            </div>\n\n            {/* Journal content */}\n            {!isRecording ? (\n              // Show full text area for editing when NOT recording\n              <textarea\n                rows={12}\n                value={journalLines.join(\"\\n\")}\n                onChange={(e) => setJournalLines(e.target.value.split(\"\\n\"))}\n                placeholder=\"Type or dictate your journal entry...\"\n                style={{\n                  width: \"100%\",\n                  padding: \"0.5rem\",\n                  fontSize: \"1rem\",\n                  borderRadius: \"6px\",\n                  border: \"1px solid #ccc\",\n                  backgroundColor: \"#fff\",\n                  color: \"#222\",\n                  whiteSpace: \"pre-wrap\",\n                  resize: \"vertical\",\n                }}\n              />\n            ) : (\n              // Show \"diary\" visual lines during recording (readonly)\n              <div\n                style={{\n                  backgroundColor: \"#fff\",\n                  borderRadius: \"6px\",\n                  border: \"1px solid #ccc\",\n                  minHeight: \"192px\",\n                  padding: \"0.5rem\",\n                  fontSize: \"1rem\",\n                  color: \"#222\",\n                  whiteSpace: \"pre-wrap\",\n                  overflowY: \"auto\",\n                }}\n                aria-live=\"polite\"\n                aria-label=\"Transcribed diary text\"\n              >\n                {journalLines.length === 0 ? (\n                  <em>Speak now, your diary will appear here...</em>\n                ) : (\n                  journalLines.map((line, idx) => (\n                    <p\n                      key={idx}\n                      style={{\n                        margin: \"0 0 0.5rem 0\",\n                        lineHeight: 1.4,\n                        borderBottom: \"1px dashed #ccc\",\n                        paddingBottom: \"0.2rem\",\n                      }}\n                    >\n                      {line}\n                    </p>\n                  ))\n                )}\n              </div>\n            )}\n\n            {/* Save button */}\n            <button\n              type=\"submit\"\n              style={{\n                marginTop: \"1rem\",\n                padding: \"0.6rem 1.2rem\",\n                fontSize: \"1.1rem\",\n                fontWeight: \"bold\",\n                color: \"#fff\",\n                backgroundColor: \"#2ecc71\",\n                border: \"none\",\n                borderRadius: \"6px\",\n                cursor: \"pointer\",\n                boxShadow: \"0 4px 6px rgba(46, 204, 113, 0.5)\",\n                alignSelf: \"flex-start\",\n                userSelect: \"none\",\n              }}\n              disabled={journalLines.length === 0}\n            >\n              Save Journal Entry\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}