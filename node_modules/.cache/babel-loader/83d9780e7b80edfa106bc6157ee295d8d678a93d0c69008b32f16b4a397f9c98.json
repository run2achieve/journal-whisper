{"ast":null,"code":"import _objectSpread from\"/Users/hye/Documents/journal-whisper/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef}from\"react\";import Calendar from\"react-calendar\";import'react-calendar/dist/Calendar.css';import logo from\"./assets/logo.png\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PROXY_API_URL=window.location.hostname===\"localhost\"?\"http://localhost:8090/transcribeAudio\":\"https://journal-whisper.onrender.com/transcribeAudio\";const formatDateLocal=date=>{const year=date.getFullYear();const month=String(date.getMonth()+1).padStart(2,\"0\");const day=String(date.getDate()).padStart(2,\"0\");return\"\".concat(year,\"-\").concat(month,\"-\").concat(day);};export default function Journal(_ref){var _localEntries$formatD;let{user,onLogout}=_ref;const[entry,setEntry]=useState(\"\");const[isRecording,setIsRecording]=useState(false);const[showToast,setShowToast]=useState(false);const[saveMessage,setSaveMessage]=useState(\"\");const[currentTimestamp,setCurrentTimestamp]=useState({date:\"\",time:\"\"});const[countdown,setCountdown]=useState(0);const[recordingDuration,setRecordingDuration]=useState(0);const[selectedDate,setSelectedDate]=useState(new Date());const[entriesForDate,setEntriesForDate]=useState([]);const[localEntries,setLocalEntries]=useState({});const mediaRecorderRef=useRef(null);const audioChunksRef=useRef([]);const countdownIntervalRef=useRef(null);const generateTimestamp=()=>{const now=new Date();return{date:formatDateLocal(now),time:now.toLocaleTimeString()};};useEffect(()=>{setCurrentTimestamp(generateTimestamp());},[]);const fetchEntriesForDate=async dateToFetch=>{const FETCH_API_URL=window.location.hostname===\"localhost\"?\"http://localhost:8090/getEntries\":\"https://journal-whisper.onrender.com/getEntries\";try{const response=await fetch(FETCH_API_URL,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({user,date:formatDateLocal(dateToFetch)})});if(!response.ok)throw new Error(\"Failed to fetch entries\");const data=await response.json();setEntriesForDate(data.entries||[]);}catch(err){setEntriesForDate([]);}};useEffect(()=>{fetchEntriesForDate(selectedDate);},[selectedDate,user]);const startRecording=async durationSeconds=>{if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia){setSaveMessage(\"Audio recording not supported in this browser.\");setShowToast(true);return;}try{const stream=await navigator.mediaDevices.getUserMedia({audio:true});const mediaRecorder=new MediaRecorder(stream);mediaRecorderRef.current=mediaRecorder;audioChunksRef.current=[];setRecordingDuration(durationSeconds);setCurrentTimestamp(generateTimestamp());setCountdown(durationSeconds);mediaRecorder.ondataavailable=event=>{if(event.data.size>0){audioChunksRef.current.push(event.data);}};mediaRecorder.onstart=()=>{setIsRecording(true);setShowToast(true);setSaveMessage(\"Recording in progress...\");countdownIntervalRef.current=setInterval(()=>{setCountdown(prev=>{if(prev<=1){stopRecording();return 0;}return prev-1;});},1000);};mediaRecorder.onstop=async()=>{clearInterval(countdownIntervalRef.current);setCountdown(0);setIsRecording(false);setRecordingDuration(0);setSaveMessage(\"\");const audioBlob=new Blob(audioChunksRef.current,{type:\"audio/webm\"});try{const formData=new FormData();formData.append(\"file\",audioBlob,\"recording.webm\");formData.append(\"user\",user);const response=await fetch(PROXY_API_URL,{method:\"POST\",body:formData});if(!response.ok)throw new Error(\"Transcription failed: \".concat(response.statusText));const data=await response.json();if(data.transcription){setEntry(data.transcription);setSaveMessage(\"Transcription received. Please review and save manually.\");setShowToast(true);}else{setSaveMessage(\"No transcription received.\");setShowToast(true);}}catch(error){setSaveMessage(\"Error during transcription: \"+error.message);setShowToast(true);}};mediaRecorder.start();}catch(err){setSaveMessage(\"Could not start recording: \"+err.message);setShowToast(true);}};const stopRecording=()=>{if(mediaRecorderRef.current&&mediaRecorderRef.current.state!==\"inactive\"){mediaRecorderRef.current.stop();}clearInterval(countdownIntervalRef.current);setIsRecording(false);};const saveToGoogleSheet=async(date,time,text,username)=>{const SAVE_API_URL=window.location.hostname===\"localhost\"?\"http://localhost:8090/saveEntry\":\"https://journal-whisper.onrender.com/saveEntry\";try{const response=await fetch(SAVE_API_URL,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({date,time,entry:text,user:username})});if(!response.ok)throw new Error(\"Failed to save entry to Google Sheets\");return await response.json();}catch(error){setSaveMessage(\"Error saving to Google Sheets: \"+error.message);setShowToast(true);return null;}};const handleSubmit=async e=>{e.preventDefault();if(!entry.trim()){setSaveMessage(\"Please enter something before saving.\");setShowToast(true);return;}const result=await saveToGoogleSheet(currentTimestamp.date,currentTimestamp.time,entry,user);if(result){setSaveMessage(\"Journal entry saved!\");setShowToast(true);setEntry(\"\");setCurrentTimestamp(generateTimestamp());const savedDate=new Date(currentTimestamp.date+\"T00:00:00\");setSelectedDate(savedDate);fetchEntriesForDate(savedDate);setLocalEntries(prev=>{const dateKey=formatDateLocal(savedDate);const existing=prev[dateKey]||[];return _objectSpread(_objectSpread({},prev),{},{[dateKey]:[entry,...existing]});});}else{setSaveMessage(\"Failed to save entry. Please try again.\");setShowToast(true);}};const handleRefreshTime=()=>{setCurrentTimestamp(generateTimestamp());setSaveMessage(\"\");};useEffect(()=>{return()=>{if(mediaRecorderRef.current&&mediaRecorderRef.current.state!==\"inactive\"){mediaRecorderRef.current.stop();}clearInterval(countdownIntervalRef.current);};},[]);useEffect(()=>{if(saveMessage){const timer=setTimeout(()=>setSaveMessage(\"\"),6000);return()=>clearTimeout(timer);}},[saveMessage]);const getButtonProgress=()=>{if(recordingDuration===0)return\"0%\";const percent=(recordingDuration-countdown)/recordingDuration*100;return\"\".concat(percent,\"%\");};return/*#__PURE__*/_jsxs(\"div\",{style:{minHeight:\"100vh\",backgroundColor:\"#FFF8E7\",padding:\"2rem\",fontFamily:\"sans-serif\",maxWidth:700,margin:\"auto\",color:\"#222\"},children:[showToast&&saveMessage&&/*#__PURE__*/_jsx(\"div\",{style:{position:\"fixed\",top:\"40px\",left:\"50%\",transform:\"translateX(-50%)\",backgroundColor:\"#333\",color:\"white\",padding:\"10px 20px\",borderRadius:\"20px\",boxShadow:\"0 2px 10px rgba(0,0,0,0.7)\",zIndex:9999,fontSize:\"1rem\",opacity:0.9,userSelect:\"none\"},\"aria-live\":\"polite\",children:saveMessage}),((_localEntries$formatD=localEntries[formatDateLocal(selectedDate)])===null||_localEntries$formatD===void 0?void 0:_localEntries$formatD.length)>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:\"1rem\",padding:\"1rem\",backgroundColor:\"#e0ffe0\",borderRadius:\"8px\",border:\"1px solid #27ae60\"},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Journal entry saved!\"}),/*#__PURE__*/_jsx(\"ul\",{style:{paddingLeft:\"1.2rem\"},children:localEntries[formatDateLocal(selectedDate)].map((text,idx)=>/*#__PURE__*/_jsx(\"li\",{style:{marginBottom:\"0.5rem\",whiteSpace:\"pre-wrap\"},children:text},idx))})]})]});}","map":{"version":3,"names":["React","useState","useEffect","useRef","Calendar","logo","jsx","_jsx","jsxs","_jsxs","PROXY_API_URL","window","location","hostname","formatDateLocal","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","concat","Journal","_ref","_localEntries$formatD","user","onLogout","entry","setEntry","isRecording","setIsRecording","showToast","setShowToast","saveMessage","setSaveMessage","currentTimestamp","setCurrentTimestamp","time","countdown","setCountdown","recordingDuration","setRecordingDuration","selectedDate","setSelectedDate","Date","entriesForDate","setEntriesForDate","localEntries","setLocalEntries","mediaRecorderRef","audioChunksRef","countdownIntervalRef","generateTimestamp","now","toLocaleTimeString","fetchEntriesForDate","dateToFetch","FETCH_API_URL","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","entries","err","startRecording","durationSeconds","navigator","mediaDevices","getUserMedia","stream","audio","mediaRecorder","MediaRecorder","current","ondataavailable","event","size","push","onstart","setInterval","prev","stopRecording","onstop","clearInterval","audioBlob","Blob","type","formData","FormData","append","statusText","transcription","error","message","start","state","stop","saveToGoogleSheet","text","username","SAVE_API_URL","handleSubmit","e","preventDefault","trim","result","savedDate","dateKey","existing","_objectSpread","handleRefreshTime","timer","setTimeout","clearTimeout","getButtonProgress","percent","style","minHeight","backgroundColor","padding","fontFamily","maxWidth","margin","color","children","position","top","left","transform","borderRadius","boxShadow","zIndex","fontSize","opacity","userSelect","length","marginTop","border","paddingLeft","map","idx","marginBottom","whiteSpace"],"sources":["/Users/hye/Documents/journal-whisper/src/Journal.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Calendar from \"react-calendar\";\nimport 'react-calendar/dist/Calendar.css';\nimport logo from \"./assets/logo.png\";\n\nconst PROXY_API_URL =\n  window.location.hostname === \"localhost\"\n    ? \"http://localhost:8090/transcribeAudio\"\n    : \"https://journal-whisper.onrender.com/transcribeAudio\";\n\nconst formatDateLocal = (date) => {\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getDate()).padStart(2, \"0\");\n  return `${year}-${month}-${day}`;\n};\n\nexport default function Journal({ user, onLogout }) {\n  const [entry, setEntry] = useState(\"\");\n  const [isRecording, setIsRecording] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const [saveMessage, setSaveMessage] = useState(\"\");\n  const [currentTimestamp, setCurrentTimestamp] = useState({ date: \"\", time: \"\" });\n  const [countdown, setCountdown] = useState(0);\n  const [recordingDuration, setRecordingDuration] = useState(0);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [entriesForDate, setEntriesForDate] = useState([]);\n  const [localEntries, setLocalEntries] = useState({});\n\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const countdownIntervalRef = useRef(null);\n\n  const generateTimestamp = () => {\n    const now = new Date();\n    return {\n      date: formatDateLocal(now),\n      time: now.toLocaleTimeString(),\n    };\n  };\n\n  useEffect(() => {\n    setCurrentTimestamp(generateTimestamp());\n  }, []);\n\n  const fetchEntriesForDate = async (dateToFetch) => {\n    const FETCH_API_URL =\n      window.location.hostname === \"localhost\"\n        ? \"http://localhost:8090/getEntries\"\n        : \"https://journal-whisper.onrender.com/getEntries\";\n\n    try {\n      const response = await fetch(FETCH_API_URL, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ user, date: formatDateLocal(dateToFetch) }),\n      });\n      if (!response.ok) throw new Error(\"Failed to fetch entries\");\n      const data = await response.json();\n      setEntriesForDate(data.entries || []);\n    } catch (err) {\n      setEntriesForDate([]);\n    }\n  };\n\n  useEffect(() => {\n    fetchEntriesForDate(selectedDate);\n  }, [selectedDate, user]);\n\n  const startRecording = async (durationSeconds) => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      setSaveMessage(\"Audio recording not supported in this browser.\");\n      setShowToast(true);\n      return;\n    }\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      audioChunksRef.current = [];\n\n      setRecordingDuration(durationSeconds);\n      setCurrentTimestamp(generateTimestamp());\n      setCountdown(durationSeconds);\n\n      mediaRecorder.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          audioChunksRef.current.push(event.data);\n        }\n      };\n\n      mediaRecorder.onstart = () => {\n        setIsRecording(true);\n        setShowToast(true);\n        setSaveMessage(\"Recording in progress...\");\n        countdownIntervalRef.current = setInterval(() => {\n          setCountdown((prev) => {\n            if (prev <= 1) {\n              stopRecording();\n              return 0;\n            }\n            return prev - 1;\n          });\n        }, 1000);\n      };\n\n      mediaRecorder.onstop = async () => {\n        clearInterval(countdownIntervalRef.current);\n        setCountdown(0);\n        setIsRecording(false);\n        setRecordingDuration(0);\n        setSaveMessage(\"\");\n\n        const audioBlob = new Blob(audioChunksRef.current, { type: \"audio/webm\" });\n        try {\n          const formData = new FormData();\n          formData.append(\"file\", audioBlob, \"recording.webm\");\n          formData.append(\"user\", user);\n\n          const response = await fetch(PROXY_API_URL, {\n            method: \"POST\",\n            body: formData,\n          });\n\n          if (!response.ok)\n            throw new Error(`Transcription failed: ${response.statusText}`);\n\n          const data = await response.json();\n          if (data.transcription) {\n            setEntry(data.transcription);\n            setSaveMessage(\"Transcription received. Please review and save manually.\");\n            setShowToast(true);\n          } else {\n            setSaveMessage(\"No transcription received.\");\n            setShowToast(true);\n          }\n        } catch (error) {\n          setSaveMessage(\"Error during transcription: \" + error.message);\n          setShowToast(true);\n        }\n      };\n\n      mediaRecorder.start();\n    } catch (err) {\n      setSaveMessage(\"Could not start recording: \" + err.message);\n      setShowToast(true);\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\") {\n      mediaRecorderRef.current.stop();\n    }\n    clearInterval(countdownIntervalRef.current);\n    setIsRecording(false);\n  };\n\n  const saveToGoogleSheet = async (date, time, text, username) => {\n    const SAVE_API_URL =\n      window.location.hostname === \"localhost\"\n        ? \"http://localhost:8090/saveEntry\"\n        : \"https://journal-whisper.onrender.com/saveEntry\";\n\n    try {\n      const response = await fetch(SAVE_API_URL, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ date, time, entry: text, user: username }),\n      });\n      if (!response.ok) throw new Error(\"Failed to save entry to Google Sheets\");\n      return await response.json();\n    } catch (error) {\n      setSaveMessage(\"Error saving to Google Sheets: \" + error.message);\n      setShowToast(true);\n      return null;\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!entry.trim()) {\n      setSaveMessage(\"Please enter something before saving.\");\n      setShowToast(true);\n      return;\n    }\n    const result = await saveToGoogleSheet(\n      currentTimestamp.date,\n      currentTimestamp.time,\n      entry,\n      user\n    );\n    if (result) {\n      setSaveMessage(\"Journal entry saved!\");\n      setShowToast(true);\n      setEntry(\"\");\n      setCurrentTimestamp(generateTimestamp());\n\n      const savedDate = new Date(currentTimestamp.date + \"T00:00:00\");\n      setSelectedDate(savedDate);\n      fetchEntriesForDate(savedDate);\n\n      setLocalEntries((prev) => {\n        const dateKey = formatDateLocal(savedDate);\n        const existing = prev[dateKey] || [];\n        return {\n          ...prev,\n          [dateKey]: [entry, ...existing],\n        };\n      });\n    } else {\n      setSaveMessage(\"Failed to save entry. Please try again.\");\n      setShowToast(true);\n    }\n  };\n\n  const handleRefreshTime = () => {\n    setCurrentTimestamp(generateTimestamp());\n    setSaveMessage(\"\");\n  };\n\n  useEffect(() => {\n    return () => {\n      if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\") {\n        mediaRecorderRef.current.stop();\n      }\n      clearInterval(countdownIntervalRef.current);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (saveMessage) {\n      const timer = setTimeout(() => setSaveMessage(\"\"), 6000);\n      return () => clearTimeout(timer);\n    }\n  }, [saveMessage]);\n\n  const getButtonProgress = () => {\n    if (recordingDuration === 0) return \"0%\";\n    const percent = ((recordingDuration - countdown) / recordingDuration) * 100;\n    return `${percent}%`;\n  };\n\n  return (\n    <div style={{ minHeight: \"100vh\", backgroundColor: \"#FFF8E7\", padding: \"2rem\", fontFamily: \"sans-serif\", maxWidth: 700, margin: \"auto\", color: \"#222\" }}>\n      {showToast && saveMessage && (\n        <div style={{ position: \"fixed\", top: \"40px\", left: \"50%\", transform: \"translateX(-50%)\", backgroundColor: \"#333\", color: \"white\", padding: \"10px 20px\", borderRadius: \"20px\", boxShadow: \"0 2px 10px rgba(0,0,0,0.7)\", zIndex: 9999, fontSize: \"1rem\", opacity: 0.9, userSelect: \"none\" }} aria-live=\"polite\">\n          {saveMessage}\n        </div>\n      )}\n\n      {localEntries[formatDateLocal(selectedDate)]?.length > 0 && (\n        <div style={{ marginTop: \"1rem\", padding: \"1rem\", backgroundColor: \"#e0ffe0\", borderRadius: \"8px\", border: \"1px solid #27ae60\" }}>\n          <h3>Journal entry saved!</h3>\n          <ul style={{ paddingLeft: \"1.2rem\" }}>\n            {localEntries[formatDateLocal(selectedDate)].map((text, idx) => (\n              <li key={idx} style={{ marginBottom: \"0.5rem\", whiteSpace: \"pre-wrap\" }}>{text}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n    </div>\n  );\n}\n"],"mappings":"yHAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAC1D,MAAO,CAAAC,QAAQ,KAAM,gBAAgB,CACrC,MAAO,kCAAkC,CACzC,MAAO,CAAAC,IAAI,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErC,KAAM,CAAAC,aAAa,CACjBC,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAK,WAAW,CACpC,uCAAuC,CACvC,sDAAsD,CAE5D,KAAM,CAAAC,eAAe,CAAIC,IAAI,EAAK,CAChC,KAAM,CAAAC,IAAI,CAAGD,IAAI,CAACE,WAAW,CAAC,CAAC,CAC/B,KAAM,CAAAC,KAAK,CAAGC,MAAM,CAACJ,IAAI,CAACK,QAAQ,CAAC,CAAC,CAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CAC1D,KAAM,CAAAC,GAAG,CAAGH,MAAM,CAACJ,IAAI,CAACQ,OAAO,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CACnD,SAAAG,MAAA,CAAUR,IAAI,MAAAQ,MAAA,CAAIN,KAAK,MAAAM,MAAA,CAAIF,GAAG,EAChC,CAAC,CAED,cAAe,SAAS,CAAAG,OAAOA,CAAAC,IAAA,CAAqB,KAAAC,qBAAA,IAApB,CAAEC,IAAI,CAAEC,QAAS,CAAC,CAAAH,IAAA,CAChD,KAAM,CAACI,KAAK,CAAEC,QAAQ,CAAC,CAAG9B,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAC+B,WAAW,CAAEC,cAAc,CAAC,CAAGhC,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACiC,SAAS,CAAEC,YAAY,CAAC,CAAGlC,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACmC,WAAW,CAAEC,cAAc,CAAC,CAAGpC,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACqC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGtC,QAAQ,CAAC,CAAEc,IAAI,CAAE,EAAE,CAAEyB,IAAI,CAAE,EAAG,CAAC,CAAC,CAChF,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGzC,QAAQ,CAAC,CAAC,CAAC,CAC7C,KAAM,CAAC0C,iBAAiB,CAAEC,oBAAoB,CAAC,CAAG3C,QAAQ,CAAC,CAAC,CAAC,CAC7D,KAAM,CAAC4C,YAAY,CAAEC,eAAe,CAAC,CAAG7C,QAAQ,CAAC,GAAI,CAAA8C,IAAI,CAAC,CAAC,CAAC,CAC5D,KAAM,CAACC,cAAc,CAAEC,iBAAiB,CAAC,CAAGhD,QAAQ,CAAC,EAAE,CAAC,CACxD,KAAM,CAACiD,YAAY,CAAEC,eAAe,CAAC,CAAGlD,QAAQ,CAAC,CAAC,CAAC,CAAC,CAEpD,KAAM,CAAAmD,gBAAgB,CAAGjD,MAAM,CAAC,IAAI,CAAC,CACrC,KAAM,CAAAkD,cAAc,CAAGlD,MAAM,CAAC,EAAE,CAAC,CACjC,KAAM,CAAAmD,oBAAoB,CAAGnD,MAAM,CAAC,IAAI,CAAC,CAEzC,KAAM,CAAAoD,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,KAAM,CAAAC,GAAG,CAAG,GAAI,CAAAT,IAAI,CAAC,CAAC,CACtB,MAAO,CACLhC,IAAI,CAAED,eAAe,CAAC0C,GAAG,CAAC,CAC1BhB,IAAI,CAAEgB,GAAG,CAACC,kBAAkB,CAAC,CAC/B,CAAC,CACH,CAAC,CAEDvD,SAAS,CAAC,IAAM,CACdqC,mBAAmB,CAACgB,iBAAiB,CAAC,CAAC,CAAC,CAC1C,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,mBAAmB,CAAG,KAAO,CAAAC,WAAW,EAAK,CACjD,KAAM,CAAAC,aAAa,CACjBjD,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAK,WAAW,CACpC,kCAAkC,CAClC,iDAAiD,CAEvD,GAAI,CACF,KAAM,CAAAgD,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACF,aAAa,CAAE,CAC1CG,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEvC,IAAI,CAAEb,IAAI,CAAED,eAAe,CAAC6C,WAAW,CAAE,CAAC,CACnE,CAAC,CAAC,CACF,GAAI,CAACE,QAAQ,CAACO,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,yBAAyB,CAAC,CAC5D,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAClCtB,iBAAiB,CAACqB,IAAI,CAACE,OAAO,EAAI,EAAE,CAAC,CACvC,CAAE,MAAOC,GAAG,CAAE,CACZxB,iBAAiB,CAAC,EAAE,CAAC,CACvB,CACF,CAAC,CAED/C,SAAS,CAAC,IAAM,CACdwD,mBAAmB,CAACb,YAAY,CAAC,CACnC,CAAC,CAAE,CAACA,YAAY,CAAEjB,IAAI,CAAC,CAAC,CAExB,KAAM,CAAA8C,cAAc,CAAG,KAAO,CAAAC,eAAe,EAAK,CAChD,GAAI,CAACC,SAAS,CAACC,YAAY,EAAI,CAACD,SAAS,CAACC,YAAY,CAACC,YAAY,CAAE,CACnEzC,cAAc,CAAC,gDAAgD,CAAC,CAChEF,YAAY,CAAC,IAAI,CAAC,CAClB,OACF,CACA,GAAI,CACF,KAAM,CAAA4C,MAAM,CAAG,KAAM,CAAAH,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC,CAAEE,KAAK,CAAE,IAAK,CAAC,CAAC,CACzE,KAAM,CAAAC,aAAa,CAAG,GAAI,CAAAC,aAAa,CAACH,MAAM,CAAC,CAC/C3B,gBAAgB,CAAC+B,OAAO,CAAGF,aAAa,CACxC5B,cAAc,CAAC8B,OAAO,CAAG,EAAE,CAE3BvC,oBAAoB,CAAC+B,eAAe,CAAC,CACrCpC,mBAAmB,CAACgB,iBAAiB,CAAC,CAAC,CAAC,CACxCb,YAAY,CAACiC,eAAe,CAAC,CAE7BM,aAAa,CAACG,eAAe,CAAIC,KAAK,EAAK,CACzC,GAAIA,KAAK,CAACf,IAAI,CAACgB,IAAI,CAAG,CAAC,CAAE,CACvBjC,cAAc,CAAC8B,OAAO,CAACI,IAAI,CAACF,KAAK,CAACf,IAAI,CAAC,CACzC,CACF,CAAC,CAEDW,aAAa,CAACO,OAAO,CAAG,IAAM,CAC5BvD,cAAc,CAAC,IAAI,CAAC,CACpBE,YAAY,CAAC,IAAI,CAAC,CAClBE,cAAc,CAAC,0BAA0B,CAAC,CAC1CiB,oBAAoB,CAAC6B,OAAO,CAAGM,WAAW,CAAC,IAAM,CAC/C/C,YAAY,CAAEgD,IAAI,EAAK,CACrB,GAAIA,IAAI,EAAI,CAAC,CAAE,CACbC,aAAa,CAAC,CAAC,CACf,MAAO,EAAC,CACV,CACA,MAAO,CAAAD,IAAI,CAAG,CAAC,CACjB,CAAC,CAAC,CACJ,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAEDT,aAAa,CAACW,MAAM,CAAG,SAAY,CACjCC,aAAa,CAACvC,oBAAoB,CAAC6B,OAAO,CAAC,CAC3CzC,YAAY,CAAC,CAAC,CAAC,CACfT,cAAc,CAAC,KAAK,CAAC,CACrBW,oBAAoB,CAAC,CAAC,CAAC,CACvBP,cAAc,CAAC,EAAE,CAAC,CAElB,KAAM,CAAAyD,SAAS,CAAG,GAAI,CAAAC,IAAI,CAAC1C,cAAc,CAAC8B,OAAO,CAAE,CAAEa,IAAI,CAAE,YAAa,CAAC,CAAC,CAC1E,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEL,SAAS,CAAE,gBAAgB,CAAC,CACpDG,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEvE,IAAI,CAAC,CAE7B,KAAM,CAAAiC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACpD,aAAa,CAAE,CAC1CqD,MAAM,CAAE,MAAM,CACdE,IAAI,CAAEgC,QACR,CAAC,CAAC,CAEF,GAAI,CAACpC,QAAQ,CAACO,EAAE,CACd,KAAM,IAAI,CAAAC,KAAK,0BAAA7C,MAAA,CAA0BqC,QAAQ,CAACuC,UAAU,CAAE,CAAC,CAEjE,KAAM,CAAA9B,IAAI,CAAG,KAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAClC,GAAID,IAAI,CAAC+B,aAAa,CAAE,CACtBtE,QAAQ,CAACuC,IAAI,CAAC+B,aAAa,CAAC,CAC5BhE,cAAc,CAAC,0DAA0D,CAAC,CAC1EF,YAAY,CAAC,IAAI,CAAC,CACpB,CAAC,IAAM,CACLE,cAAc,CAAC,4BAA4B,CAAC,CAC5CF,YAAY,CAAC,IAAI,CAAC,CACpB,CACF,CAAE,MAAOmE,KAAK,CAAE,CACdjE,cAAc,CAAC,8BAA8B,CAAGiE,KAAK,CAACC,OAAO,CAAC,CAC9DpE,YAAY,CAAC,IAAI,CAAC,CACpB,CACF,CAAC,CAED8C,aAAa,CAACuB,KAAK,CAAC,CAAC,CACvB,CAAE,MAAO/B,GAAG,CAAE,CACZpC,cAAc,CAAC,6BAA6B,CAAGoC,GAAG,CAAC8B,OAAO,CAAC,CAC3DpE,YAAY,CAAC,IAAI,CAAC,CACpB,CACF,CAAC,CAED,KAAM,CAAAwD,aAAa,CAAGA,CAAA,GAAM,CAC1B,GAAIvC,gBAAgB,CAAC+B,OAAO,EAAI/B,gBAAgB,CAAC+B,OAAO,CAACsB,KAAK,GAAK,UAAU,CAAE,CAC7ErD,gBAAgB,CAAC+B,OAAO,CAACuB,IAAI,CAAC,CAAC,CACjC,CACAb,aAAa,CAACvC,oBAAoB,CAAC6B,OAAO,CAAC,CAC3ClD,cAAc,CAAC,KAAK,CAAC,CACvB,CAAC,CAED,KAAM,CAAA0E,iBAAiB,CAAG,KAAAA,CAAO5F,IAAI,CAAEyB,IAAI,CAAEoE,IAAI,CAAEC,QAAQ,GAAK,CAC9D,KAAM,CAAAC,YAAY,CAChBnG,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAK,WAAW,CACpC,iCAAiC,CACjC,gDAAgD,CAEtD,GAAI,CACF,KAAM,CAAAgD,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACgD,YAAY,CAAE,CACzC/C,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEpD,IAAI,CAAEyB,IAAI,CAAEV,KAAK,CAAE8E,IAAI,CAAEhF,IAAI,CAAEiF,QAAS,CAAC,CAClE,CAAC,CAAC,CACF,GAAI,CAAChD,QAAQ,CAACO,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,uCAAuC,CAAC,CAC1E,MAAO,MAAM,CAAAR,QAAQ,CAACU,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAO+B,KAAK,CAAE,CACdjE,cAAc,CAAC,iCAAiC,CAAGiE,KAAK,CAACC,OAAO,CAAC,CACjEpE,YAAY,CAAC,IAAI,CAAC,CAClB,MAAO,KAAI,CACb,CACF,CAAC,CAED,KAAM,CAAA4E,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CAACnF,KAAK,CAACoF,IAAI,CAAC,CAAC,CAAE,CACjB7E,cAAc,CAAC,uCAAuC,CAAC,CACvDF,YAAY,CAAC,IAAI,CAAC,CAClB,OACF,CACA,KAAM,CAAAgF,MAAM,CAAG,KAAM,CAAAR,iBAAiB,CACpCrE,gBAAgB,CAACvB,IAAI,CACrBuB,gBAAgB,CAACE,IAAI,CACrBV,KAAK,CACLF,IACF,CAAC,CACD,GAAIuF,MAAM,CAAE,CACV9E,cAAc,CAAC,sBAAsB,CAAC,CACtCF,YAAY,CAAC,IAAI,CAAC,CAClBJ,QAAQ,CAAC,EAAE,CAAC,CACZQ,mBAAmB,CAACgB,iBAAiB,CAAC,CAAC,CAAC,CAExC,KAAM,CAAA6D,SAAS,CAAG,GAAI,CAAArE,IAAI,CAACT,gBAAgB,CAACvB,IAAI,CAAG,WAAW,CAAC,CAC/D+B,eAAe,CAACsE,SAAS,CAAC,CAC1B1D,mBAAmB,CAAC0D,SAAS,CAAC,CAE9BjE,eAAe,CAAEuC,IAAI,EAAK,CACxB,KAAM,CAAA2B,OAAO,CAAGvG,eAAe,CAACsG,SAAS,CAAC,CAC1C,KAAM,CAAAE,QAAQ,CAAG5B,IAAI,CAAC2B,OAAO,CAAC,EAAI,EAAE,CACpC,OAAAE,aAAA,CAAAA,aAAA,IACK7B,IAAI,MACP,CAAC2B,OAAO,EAAG,CAACvF,KAAK,CAAE,GAAGwF,QAAQ,CAAC,GAEnC,CAAC,CAAC,CACJ,CAAC,IAAM,CACLjF,cAAc,CAAC,yCAAyC,CAAC,CACzDF,YAAY,CAAC,IAAI,CAAC,CACpB,CACF,CAAC,CAED,KAAM,CAAAqF,iBAAiB,CAAGA,CAAA,GAAM,CAC9BjF,mBAAmB,CAACgB,iBAAiB,CAAC,CAAC,CAAC,CACxClB,cAAc,CAAC,EAAE,CAAC,CACpB,CAAC,CAEDnC,SAAS,CAAC,IAAM,CACd,MAAO,IAAM,CACX,GAAIkD,gBAAgB,CAAC+B,OAAO,EAAI/B,gBAAgB,CAAC+B,OAAO,CAACsB,KAAK,GAAK,UAAU,CAAE,CAC7ErD,gBAAgB,CAAC+B,OAAO,CAACuB,IAAI,CAAC,CAAC,CACjC,CACAb,aAAa,CAACvC,oBAAoB,CAAC6B,OAAO,CAAC,CAC7C,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAENjF,SAAS,CAAC,IAAM,CACd,GAAIkC,WAAW,CAAE,CACf,KAAM,CAAAqF,KAAK,CAAGC,UAAU,CAAC,IAAMrF,cAAc,CAAC,EAAE,CAAC,CAAE,IAAI,CAAC,CACxD,MAAO,IAAMsF,YAAY,CAACF,KAAK,CAAC,CAClC,CACF,CAAC,CAAE,CAACrF,WAAW,CAAC,CAAC,CAEjB,KAAM,CAAAwF,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,GAAIjF,iBAAiB,GAAK,CAAC,CAAE,MAAO,IAAI,CACxC,KAAM,CAAAkF,OAAO,CAAI,CAAClF,iBAAiB,CAAGF,SAAS,EAAIE,iBAAiB,CAAI,GAAG,CAC3E,SAAAnB,MAAA,CAAUqG,OAAO,MACnB,CAAC,CAED,mBACEpH,KAAA,QAAKqH,KAAK,CAAE,CAAEC,SAAS,CAAE,OAAO,CAAEC,eAAe,CAAE,SAAS,CAAEC,OAAO,CAAE,MAAM,CAAEC,UAAU,CAAE,YAAY,CAAEC,QAAQ,CAAE,GAAG,CAAEC,MAAM,CAAE,MAAM,CAAEC,KAAK,CAAE,MAAO,CAAE,CAAAC,QAAA,EACrJpG,SAAS,EAAIE,WAAW,eACvB7B,IAAA,QAAKuH,KAAK,CAAE,CAAES,QAAQ,CAAE,OAAO,CAAEC,GAAG,CAAE,MAAM,CAAEC,IAAI,CAAE,KAAK,CAAEC,SAAS,CAAE,kBAAkB,CAAEV,eAAe,CAAE,MAAM,CAAEK,KAAK,CAAE,OAAO,CAAEJ,OAAO,CAAE,WAAW,CAAEU,YAAY,CAAE,MAAM,CAAEC,SAAS,CAAE,4BAA4B,CAAEC,MAAM,CAAE,IAAI,CAAEC,QAAQ,CAAE,MAAM,CAAEC,OAAO,CAAE,GAAG,CAAEC,UAAU,CAAE,MAAO,CAAE,CAAC,YAAU,QAAQ,CAAAV,QAAA,CAC3SlG,WAAW,CACT,CACN,CAEA,EAAAT,qBAAA,CAAAuB,YAAY,CAACpC,eAAe,CAAC+B,YAAY,CAAC,CAAC,UAAAlB,qBAAA,iBAA3CA,qBAAA,CAA6CsH,MAAM,EAAG,CAAC,eACtDxI,KAAA,QAAKqH,KAAK,CAAE,CAAEoB,SAAS,CAAE,MAAM,CAAEjB,OAAO,CAAE,MAAM,CAAED,eAAe,CAAE,SAAS,CAAEW,YAAY,CAAE,KAAK,CAAEQ,MAAM,CAAE,mBAAoB,CAAE,CAAAb,QAAA,eAC/H/H,IAAA,OAAA+H,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAC7B/H,IAAA,OAAIuH,KAAK,CAAE,CAAEsB,WAAW,CAAE,QAAS,CAAE,CAAAd,QAAA,CAClCpF,YAAY,CAACpC,eAAe,CAAC+B,YAAY,CAAC,CAAC,CAACwG,GAAG,CAAC,CAACzC,IAAI,CAAE0C,GAAG,gBACzD/I,IAAA,OAAcuH,KAAK,CAAE,CAAEyB,YAAY,CAAE,QAAQ,CAAEC,UAAU,CAAE,UAAW,CAAE,CAAAlB,QAAA,CAAE1B,IAAI,EAArE0C,GAA0E,CACpF,CAAC,CACA,CAAC,EACF,CACN,EAEE,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}