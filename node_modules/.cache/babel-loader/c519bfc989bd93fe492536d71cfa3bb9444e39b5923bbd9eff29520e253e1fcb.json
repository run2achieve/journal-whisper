{"ast":null,"code":"var _jsxFileName = \"/Users/hye/Documents/my-journal-app/src/Journal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport logo from \"./assets/logo.png\"; // Adjust path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PROXY_API_URL = \"http://localhost:8090/transcribeAudio\"; // backend endpoint to receive audio & transcribe\n\nexport default function Journal({\n  user,\n  onLogout\n}) {\n  _s();\n  const [entry, setEntry] = useState(\"\");\n  const [isRecording, setIsRecording] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const [saveMessage, setSaveMessage] = useState(\"\");\n  const [currentTimestamp, setCurrentTimestamp] = useState(\"\");\n  const [countdown, setCountdown] = useState(0); // current countdown seconds left\n  const [recordingDuration, setRecordingDuration] = useState(0); // total duration for current recording in seconds\n\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const countdownIntervalRef = useRef(null);\n  const generateTimestamp = () => {\n    const now = new Date();\n    return `🕒 ${now.toLocaleString()}`;\n  };\n  useEffect(() => {\n    setCurrentTimestamp(generateTimestamp());\n  }, []);\n\n  // Start recording with specified duration in seconds\n  const startRecording = async durationSec => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      setSaveMessage(\"Audio recording not supported in this browser.\");\n      setShowToast(true);\n      return;\n    }\n    try {\n      setCurrentTimestamp(generateTimestamp()); // Refresh timestamp when recording starts\n      setRecordingDuration(durationSec);\n      setCountdown(durationSec);\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      audioChunksRef.current = [];\n      mediaRecorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          audioChunksRef.current.push(event.data);\n        }\n      };\n      mediaRecorder.onstart = () => {\n        setIsRecording(true);\n        setShowToast(true);\n        setSaveMessage(\"Recording in progress...\");\n      };\n      mediaRecorder.onstop = async () => {\n        clearInterval(countdownIntervalRef.current);\n        setCountdown(0);\n        setIsRecording(false);\n        setSaveMessage(\"Processing audio...\");\n        setShowToast(true);\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: \"audio/webm\"\n        });\n        try {\n          const formData = new FormData();\n          formData.append(\"file\", audioBlob, \"recording.webm\");\n          formData.append(\"user\", user);\n          const response = await fetch(PROXY_API_URL, {\n            method: \"POST\",\n            body: formData\n          });\n          if (!response.ok) {\n            throw new Error(`Transcription failed: ${response.statusText}`);\n          }\n          const data = await response.json();\n          if (data.transcription) {\n            // Show transcription as toast message (not in textarea)\n            setSaveMessage(`Transcription: ${data.transcription}`);\n\n            // Append transcription to text box\n            setEntry(prev => (prev ? prev + \"\\n\" : \"\") + data.transcription);\n\n            // Save transcription + timestamp + user to Google Sheets\n            await saveToGoogleSheet(currentTimestamp, data.transcription, user);\n          } else {\n            setSaveMessage(\"No transcription received.\");\n          }\n        } catch (error) {\n          setSaveMessage(\"Error during transcription: \" + error.message);\n        }\n      };\n      mediaRecorder.start();\n\n      // Setup countdown interval for progress bar & auto-stop\n      countdownIntervalRef.current = setInterval(() => {\n        setCountdown(prev => {\n          if (prev <= 1) {\n            stopRecording();\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } catch (err) {\n      setSaveMessage(\"Could not start recording: \" + err.message);\n      setShowToast(true);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\") {\n      mediaRecorderRef.current.stop();\n    }\n    clearInterval(countdownIntervalRef.current);\n    setIsRecording(false);\n    setCountdown(0);\n    setSaveMessage(\"\"); // clear \"Recording in progress...\" message on stop\n  };\n  const saveToGoogleSheet = async (timestamp, text, username) => {\n    try {\n      const response = await fetch(\"http://localhost:8090/saveEntry\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          timestamp,\n          entry: text,\n          user: username\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to save entry to Google Sheets\");\n      return await response.json();\n    } catch (error) {\n      setSaveMessage(\"Error saving to Google Sheets: \" + error.message);\n      setShowToast(true);\n      return null;\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!entry.trim()) {\n      setSaveMessage(\"Please enter something before saving.\");\n      setShowToast(true);\n      return;\n    }\n    const result = await saveToGoogleSheet(currentTimestamp, entry, user);\n    if (result) {\n      setSaveMessage(\"Journal entry saved successfully!\");\n      setShowToast(true);\n      setEntry(\"\");\n      setCurrentTimestamp(generateTimestamp());\n    } else {\n      setSaveMessage(\"Failed to save entry. Please try again.\");\n      setShowToast(true);\n    }\n  };\n  const handleRefreshTime = () => {\n    setCurrentTimestamp(generateTimestamp());\n    setSaveMessage(\"\");\n  };\n  useEffect(() => {\n    return () => {\n      if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\") {\n        mediaRecorderRef.current.stop();\n      }\n      clearInterval(countdownIntervalRef.current);\n    };\n  }, []);\n  useEffect(() => {\n    if (saveMessage) {\n      const timer = setTimeout(() => setSaveMessage(\"\"), 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [saveMessage]);\n\n  // Calculate progress bar width percent for the active button\n  const getButtonProgress = () => {\n    if (!isRecording || countdown === 0 || recordingDuration === 0) return \"0%\";\n    const elapsed = recordingDuration - countdown;\n    return `${elapsed / recordingDuration * 100}%`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: \"100vh\",\n      backgroundColor: \"#FFF8E7\",\n      padding: \"2rem\",\n      fontFamily: \"sans-serif\",\n      maxWidth: 700,\n      margin: \"auto\",\n      color: \"#222\"\n    },\n    children: [showToast && saveMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: \"40px\",\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        backgroundColor: \"#333\",\n        color: \"white\",\n        padding: \"10px 20px\",\n        borderRadius: \"20px\",\n        boxShadow: \"0 2px 10px rgba(0,0,0,0.7)\",\n        zIndex: 9999,\n        fontSize: \"1rem\",\n        opacity: 0.9,\n        userSelect: \"none\"\n      },\n      \"aria-live\": \"polite\",\n      children: saveMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        marginBottom: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"My Logo\",\n        style: {\n          maxWidth: \"150px\",\n          height: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"User:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), \" \", user, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogout,\n          style: {\n            marginLeft: \"1rem\",\n            padding: \"0.3rem 0.75rem\",\n            fontSize: \"1rem\",\n            cursor: \"pointer\",\n            borderRadius: \"6px\",\n            border: \"1px solid #888\",\n            backgroundColor: \"#f0f0f0\",\n            color: \"#333\"\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"1rem\",\n        marginBottom: \"1rem\",\n        justifyContent: \"center\"\n      },\n      children: [{\n        label: \"🔴 Short Recording\",\n        duration: 30\n      }, {\n        label: \"⏱️ 1 Min\",\n        duration: 60\n      }, {\n        label: \"⏱️ 3 Min\",\n        duration: 180\n      }].map(({\n        label,\n        duration\n      }) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (isRecording) return stopRecording();\n          startRecording(duration);\n        },\n        disabled: isRecording && recordingDuration !== duration,\n        style: {\n          position: \"relative\",\n          padding: \"1rem\",\n          fontSize: \"1rem\",\n          borderRadius: 8,\n          border: \"none\",\n          cursor: isRecording && recordingDuration !== duration ? \"not-allowed\" : \"pointer\",\n          width: \"140px\",\n          backgroundColor: isRecording && recordingDuration === duration ? \"#FFB300\" : \"#FFD700\",\n          // bright yellow and darker yellow for active\n          color: \"#000\",\n          overflow: \"hidden\",\n          userSelect: \"none\"\n        },\n        children: [label, isRecording && recordingDuration === duration && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            bottom: 0,\n            left: 0,\n            height: \"6px\",\n            background: \"#27ae60\",\n            width: getButtonProgress(),\n            transition: \"width 1s linear\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }, this)]\n      }, label, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          marginBottom: \"0.3rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: currentTimestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleRefreshTime,\n          style: {\n            backgroundColor: \"#666\",\n            color: \"#fff\",\n            border: \"none\",\n            borderRadius: \"6px\",\n            padding: \"0.3rem 0.75rem\",\n            cursor: \"pointer\"\n          },\n          title: \"Refresh timestamp\",\n          children: \"Refresh Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: 10,\n        style: {\n          width: \"100%\",\n          borderRadius: \"10px\",\n          border: \"2px solid #ccc\",\n          padding: \"1rem\",\n          fontSize: \"1rem\",\n          resize: \"vertical\",\n          fontFamily: \"monospace\"\n        },\n        placeholder: \"Write your journal entry here or record...\",\n        value: entry,\n        onChange: e => setEntry(e.target.value),\n        disabled: isRecording,\n        \"aria-label\": \"Journal entry text area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isRecording,\n        style: {\n          marginTop: \"1rem\",\n          padding: \"0.75rem 1.5rem\",\n          fontSize: \"1.1rem\",\n          cursor: isRecording ? \"not-allowed\" : \"pointer\",\n          borderRadius: \"8px\",\n          border: \"none\",\n          backgroundColor: \"#27ae60\",\n          color: \"white\",\n          fontWeight: \"bold\",\n          width: \"100%\"\n        },\n        children: \"Save Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n}\n_s(Journal, \"ay89DoyIsfJ1plftbZCrxnfFdN0=\");\n_c = Journal;\nvar _c;\n$RefreshReg$(_c, \"Journal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","logo","jsxDEV","_jsxDEV","PROXY_API_URL","Journal","user","onLogout","_s","entry","setEntry","isRecording","setIsRecording","showToast","setShowToast","saveMessage","setSaveMessage","currentTimestamp","setCurrentTimestamp","countdown","setCountdown","recordingDuration","setRecordingDuration","mediaRecorderRef","audioChunksRef","countdownIntervalRef","generateTimestamp","now","Date","toLocaleString","startRecording","durationSec","navigator","mediaDevices","getUserMedia","stream","audio","mediaRecorder","MediaRecorder","current","ondataavailable","event","data","size","push","onstart","onstop","clearInterval","audioBlob","Blob","type","formData","FormData","append","response","fetch","method","body","ok","Error","statusText","json","transcription","prev","saveToGoogleSheet","error","message","start","setInterval","stopRecording","err","state","stop","timestamp","text","username","headers","JSON","stringify","handleSubmit","e","preventDefault","trim","result","handleRefreshTime","timer","setTimeout","clearTimeout","getButtonProgress","elapsed","style","minHeight","backgroundColor","padding","fontFamily","maxWidth","margin","color","children","position","top","left","transform","borderRadius","boxShadow","zIndex","fontSize","opacity","userSelect","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","marginBottom","src","alt","height","onClick","marginLeft","cursor","border","gap","label","duration","map","disabled","width","overflow","bottom","background","transition","onSubmit","title","rows","resize","placeholder","value","onChange","target","marginTop","fontWeight","_c","$RefreshReg$"],"sources":["/Users/hye/Documents/my-journal-app/src/Journal.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport logo from \"./assets/logo.png\"; // Adjust path as needed\n\nconst PROXY_API_URL = \"http://localhost:8090/transcribeAudio\"; // backend endpoint to receive audio & transcribe\n\nexport default function Journal({ user, onLogout }) {\n  const [entry, setEntry] = useState(\"\");\n  const [isRecording, setIsRecording] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const [saveMessage, setSaveMessage] = useState(\"\");\n  const [currentTimestamp, setCurrentTimestamp] = useState(\"\");\n  const [countdown, setCountdown] = useState(0); // current countdown seconds left\n  const [recordingDuration, setRecordingDuration] = useState(0); // total duration for current recording in seconds\n\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const countdownIntervalRef = useRef(null);\n\n  const generateTimestamp = () => {\n    const now = new Date();\n    return `🕒 ${now.toLocaleString()}`;\n  };\n\n  useEffect(() => {\n    setCurrentTimestamp(generateTimestamp());\n  }, []);\n\n  // Start recording with specified duration in seconds\n  const startRecording = async (durationSec) => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      setSaveMessage(\"Audio recording not supported in this browser.\");\n      setShowToast(true);\n      return;\n    }\n    try {\n      setCurrentTimestamp(generateTimestamp()); // Refresh timestamp when recording starts\n      setRecordingDuration(durationSec);\n      setCountdown(durationSec);\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      audioChunksRef.current = [];\n\n      mediaRecorder.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          audioChunksRef.current.push(event.data);\n        }\n      };\n\n      mediaRecorder.onstart = () => {\n        setIsRecording(true);\n        setShowToast(true);\n        setSaveMessage(\"Recording in progress...\");\n      };\n\n      mediaRecorder.onstop = async () => {\n        clearInterval(countdownIntervalRef.current);\n        setCountdown(0);\n        setIsRecording(false);\n        setSaveMessage(\"Processing audio...\");\n        setShowToast(true);\n\n        const audioBlob = new Blob(audioChunksRef.current, { type: \"audio/webm\" });\n        try {\n          const formData = new FormData();\n          formData.append(\"file\", audioBlob, \"recording.webm\");\n          formData.append(\"user\", user);\n\n          const response = await fetch(PROXY_API_URL, {\n            method: \"POST\",\n            body: formData,\n          });\n\n          if (!response.ok) {\n            throw new Error(`Transcription failed: ${response.statusText}`);\n          }\n\n          const data = await response.json();\n\n          if (data.transcription) {\n            // Show transcription as toast message (not in textarea)\n            setSaveMessage(`Transcription: ${data.transcription}`);\n\n            // Append transcription to text box\n            setEntry((prev) => (prev ? prev + \"\\n\" : \"\") + data.transcription);\n\n            // Save transcription + timestamp + user to Google Sheets\n            await saveToGoogleSheet(currentTimestamp, data.transcription, user);\n          } else {\n            setSaveMessage(\"No transcription received.\");\n          }\n        } catch (error) {\n          setSaveMessage(\"Error during transcription: \" + error.message);\n        }\n      };\n\n      mediaRecorder.start();\n\n      // Setup countdown interval for progress bar & auto-stop\n      countdownIntervalRef.current = setInterval(() => {\n        setCountdown((prev) => {\n          if (prev <= 1) {\n            stopRecording();\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } catch (err) {\n      setSaveMessage(\"Could not start recording: \" + err.message);\n      setShowToast(true);\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\") {\n      mediaRecorderRef.current.stop();\n    }\n    clearInterval(countdownIntervalRef.current);\n    setIsRecording(false);\n    setCountdown(0);\n    setSaveMessage(\"\"); // clear \"Recording in progress...\" message on stop\n  };\n\n  const saveToGoogleSheet = async (timestamp, text, username) => {\n    try {\n      const response = await fetch(\"http://localhost:8090/saveEntry\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ timestamp, entry: text, user: username }),\n      });\n      if (!response.ok) throw new Error(\"Failed to save entry to Google Sheets\");\n      return await response.json();\n    } catch (error) {\n      setSaveMessage(\"Error saving to Google Sheets: \" + error.message);\n      setShowToast(true);\n      return null;\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!entry.trim()) {\n      setSaveMessage(\"Please enter something before saving.\");\n      setShowToast(true);\n      return;\n    }\n    const result = await saveToGoogleSheet(currentTimestamp, entry, user);\n    if (result) {\n      setSaveMessage(\"Journal entry saved successfully!\");\n      setShowToast(true);\n      setEntry(\"\");\n      setCurrentTimestamp(generateTimestamp());\n    } else {\n      setSaveMessage(\"Failed to save entry. Please try again.\");\n      setShowToast(true);\n    }\n  };\n\n  const handleRefreshTime = () => {\n    setCurrentTimestamp(generateTimestamp());\n    setSaveMessage(\"\");\n  };\n\n  useEffect(() => {\n    return () => {\n      if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\") {\n        mediaRecorderRef.current.stop();\n      }\n      clearInterval(countdownIntervalRef.current);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (saveMessage) {\n      const timer = setTimeout(() => setSaveMessage(\"\"), 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [saveMessage]);\n\n  // Calculate progress bar width percent for the active button\n  const getButtonProgress = () => {\n    if (!isRecording || countdown === 0 || recordingDuration === 0) return \"0%\";\n    const elapsed = recordingDuration - countdown;\n    return `${(elapsed / recordingDuration) * 100}%`;\n  };\n\n  return (\n    <div\n      style={{\n        minHeight: \"100vh\",\n        backgroundColor: \"#FFF8E7\",\n        padding: \"2rem\",\n        fontFamily: \"sans-serif\",\n        maxWidth: 700,\n        margin: \"auto\",\n        color: \"#222\",\n      }}\n    >\n      {showToast && saveMessage && (\n        <div\n          style={{\n            position: \"fixed\",\n            top: \"40px\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n            backgroundColor: \"#333\",\n            color: \"white\",\n            padding: \"10px 20px\",\n            borderRadius: \"20px\",\n            boxShadow: \"0 2px 10px rgba(0,0,0,0.7)\",\n            zIndex: 9999,\n            fontSize: \"1rem\",\n            opacity: 0.9,\n            userSelect: \"none\",\n          }}\n          aria-live=\"polite\"\n        >\n          {saveMessage}\n        </div>\n      )}\n\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          marginBottom: \"1rem\",\n        }}\n      >\n        <img\n          src={logo}\n          alt=\"My Logo\"\n          style={{ maxWidth: \"150px\", height: \"auto\" }}\n        />\n        <div>\n          <strong>User:</strong> {user}\n          <button\n            onClick={onLogout}\n            style={{\n              marginLeft: \"1rem\",\n              padding: \"0.3rem 0.75rem\",\n              fontSize: \"1rem\",\n              cursor: \"pointer\",\n              borderRadius: \"6px\",\n              border: \"1px solid #888\",\n              backgroundColor: \"#f0f0f0\",\n              color: \"#333\",\n            }}\n          >\n            Logout\n          </button>\n        </div>\n      </div>\n\n      <div\n        style={{\n          display: \"flex\",\n          gap: \"1rem\",\n          marginBottom: \"1rem\",\n          justifyContent: \"center\",\n        }}\n      >\n        {[\n          { label: \"🔴 Short Recording\", duration: 30 },\n          { label: \"⏱️ 1 Min\", duration: 60 },\n          { label: \"⏱️ 3 Min\", duration: 180 },\n        ].map(({ label, duration }) => (\n          <button\n            key={label}\n            onClick={() => {\n              if (isRecording) return stopRecording();\n              startRecording(duration);\n            }}\n            disabled={isRecording && recordingDuration !== duration}\n            style={{\n              position: \"relative\",\n              padding: \"1rem\",\n              fontSize: \"1rem\",\n              borderRadius: 8,\n              border: \"none\",\n              cursor: isRecording && recordingDuration !== duration ? \"not-allowed\" : \"pointer\",\n              width: \"140px\",\n              backgroundColor: isRecording && recordingDuration === duration ? \"#FFB300\" : \"#FFD700\", // bright yellow and darker yellow for active\n              color: \"#000\",\n              overflow: \"hidden\",\n              userSelect: \"none\",\n            }}\n          >\n            {label}\n            {isRecording && recordingDuration === duration && (\n              <div\n                style={{\n                  position: \"absolute\",\n                  bottom: 0,\n                  left: 0,\n                  height: \"6px\",\n                  background: \"#27ae60\",\n                  width: getButtonProgress(),\n                  transition: \"width 1s linear\",\n                }}\n              />\n            )}\n          </button>\n        ))}\n      </div>\n\n      <form onSubmit={handleSubmit}>\n        <div style={{ display: \"flex\", justifyContent: \"space-between\", marginBottom: \"0.3rem\" }}>\n          <span>{currentTimestamp}</span>\n          <button\n            type=\"button\"\n            onClick={handleRefreshTime}\n            style={{\n              backgroundColor: \"#666\",\n              color: \"#fff\",\n              border: \"none\",\n              borderRadius: \"6px\",\n              padding: \"0.3rem 0.75rem\",\n              cursor: \"pointer\",\n            }}\n            title=\"Refresh timestamp\"\n          >\n            Refresh Time\n          </button>\n        </div>\n        <textarea\n          rows={10}\n          style={{\n            width: \"100%\",\n            borderRadius: \"10px\",\n            border: \"2px solid #ccc\",\n            padding: \"1rem\",\n            fontSize: \"1rem\",\n            resize: \"vertical\",\n            fontFamily: \"monospace\",\n          }}\n          placeholder=\"Write your journal entry here or record...\"\n          value={entry}\n          onChange={(e) => setEntry(e.target.value)}\n          disabled={isRecording}\n          aria-label=\"Journal entry text area\"\n        />\n        <button\n          type=\"submit\"\n          disabled={isRecording}\n          style={{\n            marginTop: \"1rem\",\n            padding: \"0.75rem 1.5rem\",\n            fontSize: \"1.1rem\",\n            cursor: isRecording ? \"not-allowed\" : \"pointer\",\n            borderRadius: \"8px\",\n            border: \"none\",\n            backgroundColor: \"#27ae60\",\n            color: \"white\",\n            fontWeight: \"bold\",\n            width: \"100%\",\n          }}\n        >\n          Save Entry\n        </button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}