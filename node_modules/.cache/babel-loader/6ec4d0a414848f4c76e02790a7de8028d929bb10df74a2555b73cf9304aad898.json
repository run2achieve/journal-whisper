{"ast":null,"code":"var _jsxFileName = \"/Users/hye/Documents/journal-whisper/src/Journal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport logo from \"./assets/logo.png\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PROXY_API_URL = window.location.hostname === \"localhost\" ? \"http://localhost:8090/transcribeAudio\" : \"https://journal-whisper.onrender.com/transcribeAudio\";\nconst formatDateLocal = date => {\n  // Ensure we're working with a proper Date object\n  const dateObj = date instanceof Date ? date : new Date(date);\n\n  // Use local timezone instead of UTC to avoid date shifting\n  const year = dateObj.getFullYear();\n  const month = String(dateObj.getMonth() + 1).padStart(2, \"0\");\n  const day = String(dateObj.getDate()).padStart(2, \"0\");\n  return `${year}-${month}-${day}`;\n};\nexport default function Journal({\n  user,\n  onLogout\n}) {\n  _s();\n  const [entry, setEntry] = useState(\"\");\n  const [isRecording, setIsRecording] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const [saveMessage, setSaveMessage] = useState(\"\");\n  const [currentTimestamp, setCurrentTimestamp] = useState({\n    date: \"\",\n    time: \"\"\n  });\n  const [countdown, setCountdown] = useState(0);\n  const [recordingDuration, setRecordingDuration] = useState(0);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [entriesForDate, setEntriesForDate] = useState([]);\n  const [localEntries, setLocalEntries] = useState({});\n  const [entriesCache, setEntriesCache] = useState({}); // Cache for fetched entries\n  const [cacheTimestamps, setCacheTimestamps] = useState({}); // Track when data was cached\n  const [saveAnimating, setSaveAnimating] = useState(false);\n  const [saveClickAnimating, setSaveClickAnimating] = useState(false);\n  const [isLoadingEntries, setIsLoadingEntries] = useState(false);\n  const [isRefreshingEntries, setIsRefreshingEntries] = useState(false);\n  const [fetchError, setFetchError] = useState(null);\n\n  // New states for modal functionality\n  const [showModal, setShowModal] = useState(false);\n  const [modalEntries, setModalEntries] = useState([]);\n  const [modalDate, setModalDate] = useState(\"\");\n  const [isLoadingModal, setIsLoadingModal] = useState(false);\n  const [isRefreshingModal, setIsRefreshingModal] = useState(false);\n  const [modalError, setModalError] = useState(null);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const countdownIntervalRef = useRef(null);\n\n  // Cache expiry time (5 minutes)\n  const CACHE_EXPIRY_MS = 5 * 60 * 1000;\n  const generateTimestamp = () => {\n    const now = new Date();\n    return {\n      date: formatDateLocal(now),\n      time: now.toLocaleTimeString()\n    };\n  };\n  useEffect(() => {\n    setCurrentTimestamp(generateTimestamp());\n  }, []);\n  const isCacheValid = dateKey => {\n    const timestamp = cacheTimestamps[dateKey];\n    if (!timestamp) return false;\n    return Date.now() - timestamp < CACHE_EXPIRY_MS;\n  };\n  const fetchEntriesForDate = async (dateToFetch, forceRefresh = false) => {\n    const dateKey = formatDateLocal(dateToFetch);\n\n    // ENHANCED DEBUG LOGGING\n    console.group(`🔍 FETCH DEBUG - Date: ${dateKey}`);\n    console.log(\"1. Input date object:\", dateToFetch);\n    console.log(\"2. Formatted date key:\", dateKey);\n    console.log(\"3. Current user:\", user);\n    console.log(\"4. Force refresh:\", forceRefresh);\n    console.log(\"5. Current cache:\", entriesCache);\n    console.log(\"6. Cache timestamps:\", cacheTimestamps);\n\n    // Show cached data immediately if available and valid (unless force refresh)\n    const hasCachedData = entriesCache[dateKey];\n    const cacheIsValid = isCacheValid(dateKey);\n    console.log(\"7. Has cached data:\", hasCachedData);\n    console.log(\"8. Cache is valid:\", cacheIsValid);\n    if (!forceRefresh && hasCachedData && cacheIsValid) {\n      console.log(\"✅ Using valid cache data\");\n      console.groupEnd();\n      setEntriesForDate(entriesCache[dateKey]);\n      setFetchError(null);\n      return;\n    }\n\n    // If we have cached data but it's stale, show it while loading fresh data\n    if (hasCachedData && !forceRefresh) {\n      console.log(\"⚠️ Using stale cache while refreshing\");\n      setEntriesForDate(entriesCache[dateKey]);\n      setIsRefreshingEntries(true);\n      setFetchError(null);\n    } else {\n      console.log(\"🔄 Loading fresh data\");\n      setIsLoadingEntries(true);\n      setFetchError(null);\n    }\n    const FETCH_API_URL = window.location.hostname === \"localhost\" ? \"http://localhost:8090/getEntries\" : \"https://journal-whisper.onrender.com/getEntries\";\n    console.log(\"9. API URL:\", FETCH_API_URL);\n    try {\n      const requestBody = {\n        user: user,\n        date: dateKey,\n        timestamp: Date.now()\n      };\n      console.log(\"10. Request body:\", JSON.stringify(requestBody, null, 2));\n      console.log(\"11. Request headers:\", {\n        \"Content-Type\": \"application/json\",\n        \"Cache-Control\": \"no-cache, no-store, must-revalidate\",\n        \"Pragma\": \"no-cache\",\n        \"Expires\": \"0\"\n      });\n      console.log(\"12. 🚀 Sending fetch request...\");\n      const response = await fetch(FETCH_API_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Cache-Control\": \"no-cache, no-store, must-revalidate\",\n          \"Pragma\": \"no-cache\",\n          \"Expires\": \"0\"\n        },\n        body: JSON.stringify(requestBody)\n      });\n      console.log(\"13. Response received:\");\n      console.log(\"    - Status:\", response.status);\n      console.log(\"    - Status text:\", response.statusText);\n      console.log(\"    - Headers:\", Object.fromEntries(response.headers.entries()));\n      if (!response.ok) {\n        throw new Error(`Failed to fetch entries: ${response.status} ${response.statusText}`);\n      }\n\n      // Get response as text first to see raw data\n      const responseText = await response.text();\n      console.log(\"14. Raw response text:\", responseText);\n\n      // Try to parse as JSON\n      let data;\n      try {\n        data = JSON.parse(responseText);\n        console.log(\"15. Parsed JSON data:\", data);\n      } catch (parseError) {\n        console.error(\"❌ JSON parse error:\", parseError);\n        console.log(\"Response was not valid JSON:\", responseText);\n        throw new Error(\"Invalid JSON response from server\");\n      }\n\n      // Check data structure\n      console.log(\"16. Data structure analysis:\");\n      console.log(\"    - Type of data:\", typeof data);\n      console.log(\"    - Data keys:\", Object.keys(data || {}));\n      console.log(\"    - data.entries type:\", typeof data.entries);\n      console.log(\"    - data.entries length:\", data.entries ? data.entries.length : \"N/A\");\n      console.log(\"    - data.entries content:\", data.entries);\n\n      // Sort entries by time in descending order (most recent first)\n      const sortedEntries = (data.entries || []).sort((a, b) => {\n        console.log(\"17. Sorting entry:\", a, \"vs\", b);\n        const timeA = new Date(`1970-01-01 ${a.time}`);\n        const timeB = new Date(`1970-01-01 ${b.time}`);\n        return timeB - timeA;\n      });\n      console.log(\"18. Final sorted entries:\", sortedEntries);\n\n      // Update cache with timestamp\n      setEntriesCache(prev => {\n        const newCache = {\n          ...prev,\n          [dateKey]: sortedEntries\n        };\n        console.log(\"19. Updated cache:\", newCache);\n        return newCache;\n      });\n      setCacheTimestamps(prev => {\n        const newTimestamps = {\n          ...prev,\n          [dateKey]: Date.now()\n        };\n        console.log(\"20. Updated cache timestamps:\", newTimestamps);\n        return newTimestamps;\n      });\n      setEntriesForDate(sortedEntries);\n      setFetchError(null);\n      console.log(\"✅ SUCCESS: Entries fetched and set\");\n    } catch (err) {\n      console.error(\"❌ ERROR in fetchEntriesForDate:\", err);\n      console.log(\"Error details:\");\n      console.log(\"  - Message:\", err.message);\n      console.log(\"  - Stack:\", err.stack);\n\n      // If we have cached data, keep showing it with error message\n      if (!hasCachedData) {\n        console.log(\"No cached data available, setting empty array\");\n        setEntriesForDate([]);\n        // Cache empty result to avoid repeated failed requests\n        setEntriesCache(prev => ({\n          ...prev,\n          [dateKey]: []\n        }));\n        setCacheTimestamps(prev => ({\n          ...prev,\n          [dateKey]: Date.now()\n        }));\n      } else {\n        console.log(\"Keeping cached data due to error\");\n      }\n      setFetchError(err.message);\n    } finally {\n      console.log(\"21. 🏁 Fetch operation complete\");\n      console.groupEnd();\n      setIsLoadingEntries(false);\n      setIsRefreshingEntries(false);\n    }\n  };\n\n  // Enhanced function to handle date clicks and show modal\n  const handleDateClick = async clickedDate => {\n    const dateKey = formatDateLocal(clickedDate);\n    console.group(`🎯 DATE CLICK DEBUG - Date: ${dateKey}`);\n    console.log(\"1. Clicked date object:\", clickedDate);\n    console.log(\"2. Formatted date key:\", dateKey);\n    console.log(\"3. Current user:\", user);\n    setModalDate(dateKey);\n    setShowModal(true);\n    setModalError(null);\n\n    // Check cache first and show if valid\n    const hasCachedData = entriesCache[dateKey];\n    const cacheIsValid = isCacheValid(dateKey);\n    console.log(\"4. Has cached data:\", hasCachedData);\n    console.log(\"5. Cache is valid:\", cacheIsValid);\n    if (hasCachedData && cacheIsValid) {\n      console.log(\"✅ Using valid cache for modal\");\n      console.groupEnd();\n      setModalEntries(entriesCache[dateKey]);\n      setIsLoadingModal(false);\n      return;\n    }\n\n    // If we have cached data but it's stale, show it while loading fresh data\n    if (hasCachedData) {\n      console.log(\"⚠️ Using stale cache for modal while refreshing\");\n      setModalEntries(entriesCache[dateKey]);\n      setIsRefreshingModal(true);\n    } else {\n      console.log(\"🔄 Loading fresh data for modal\");\n      setIsLoadingModal(true);\n    }\n    const FETCH_API_URL = window.location.hostname === \"localhost\" ? \"http://localhost:8090/getEntries\" : \"https://journal-whisper.onrender.com/getEntries\";\n    console.log(\"6. Modal API URL:\", FETCH_API_URL);\n    try {\n      const requestBody = {\n        user: user,\n        date: dateKey,\n        timestamp: Date.now()\n      };\n      console.log(\"7. Modal request body:\", JSON.stringify(requestBody, null, 2));\n      console.log(\"8. 🚀 Sending modal fetch request...\");\n      const response = await fetch(FETCH_API_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Cache-Control\": \"no-cache, no-store, must-revalidate\",\n          \"Pragma\": \"no-cache\",\n          \"Expires\": \"0\"\n        },\n        body: JSON.stringify(requestBody)\n      });\n      console.log(\"9. Modal response:\");\n      console.log(\"    - Status:\", response.status);\n      console.log(\"    - Status text:\", response.statusText);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch entries: ${response.status} ${response.statusText}`);\n      }\n      const responseText = await response.text();\n      console.log(\"10. Modal raw response:\", responseText);\n      const data = JSON.parse(responseText);\n      console.log(\"11. Modal parsed data:\", data);\n\n      // Sort entries by time in descending order (most recent first)\n      const sortedEntries = (data.entries || []).sort((a, b) => {\n        const timeA = new Date(`1970-01-01 ${a.time}`);\n        const timeB = new Date(`1970-01-01 ${b.time}`);\n        return timeB - timeA;\n      });\n      console.log(\"12. Modal sorted entries:\", sortedEntries);\n\n      // Update cache with timestamp\n      setEntriesCache(prev => ({\n        ...prev,\n        [dateKey]: sortedEntries\n      }));\n      setCacheTimestamps(prev => ({\n        ...prev,\n        [dateKey]: Date.now()\n      }));\n      setModalEntries(sortedEntries);\n      setModalError(null);\n      console.log(\"✅ SUCCESS: Modal entries loaded\");\n    } catch (err) {\n      console.error(\"❌ ERROR in modal fetch:\", err);\n      if (!hasCachedData) {\n        setModalEntries([]);\n        setEntriesCache(prev => ({\n          ...prev,\n          [dateKey]: []\n        }));\n        setCacheTimestamps(prev => ({\n          ...prev,\n          [dateKey]: Date.now()\n        }));\n      }\n      setModalError(err.message);\n    } finally {\n      console.log(\"13. 🏁 Modal fetch complete\");\n      console.groupEnd();\n      setIsLoadingModal(false);\n      setIsRefreshingModal(false);\n    }\n  };\n  const closeModal = () => {\n    setShowModal(false);\n    setModalEntries([]);\n    setModalDate(\"\");\n    setModalError(null);\n  };\n  const handleRefreshEntries = () => {\n    fetchEntriesForDate(selectedDate, true);\n  };\n\n  // Debug Section Component\n  const DebugSection = () => {\n    const testAPICall = async () => {\n      console.group(\"🧪 MANUAL API TEST\");\n      const testDate = \"2025-06-03\"; // Change this to a date you know has entries\n      const FETCH_API_URL = window.location.hostname === \"localhost\" ? \"http://localhost:8090/getEntries\" : \"https://journal-whisper.onrender.com/getEntries\";\n      try {\n        console.log(\"Testing with date:\", testDate);\n        console.log(\"Testing with user:\", user);\n        const response = await fetch(FETCH_API_URL, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            user: user,\n            date: testDate,\n            timestamp: Date.now()\n          })\n        });\n        console.log(\"Test response status:\", response.status);\n        const responseText = await response.text();\n        console.log(\"Test response text:\", responseText);\n        if (response.ok) {\n          const data = JSON.parse(responseText);\n          console.log(\"Test response data:\", data);\n        }\n      } catch (error) {\n        console.error(\"Test API call failed:\", error);\n      }\n      console.groupEnd();\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"2rem\",\n        padding: \"1rem\",\n        backgroundColor: \"#f0f0f0\",\n        borderRadius: \"8px\",\n        border: \"2px solid #orange\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83D\\uDC1B Debug Tools\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"0.9rem\",\n          color: \"#666\"\n        },\n        children: [\"Current user: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 48\n        }, this), \"Current cache: \", Object.keys(entriesCache).length, \" dates cached\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 73\n        }, this), \"Selected date: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: formatDateLocal(selectedDate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: testAPICall,\n        style: {\n          padding: \"0.5rem 1rem\",\n          backgroundColor: \"#ff9800\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\"\n        },\n        children: \"\\uD83E\\uDDEA Test API Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          console.log(\"Current state:\");\n          console.log(\"- user:\", user);\n          console.log(\"- selectedDate:\", selectedDate);\n          console.log(\"- entriesCache:\", entriesCache);\n          console.log(\"- cacheTimestamps:\", cacheTimestamps);\n          console.log(\"- entriesForDate:\", entriesForDate);\n        },\n        style: {\n          padding: \"0.5rem 1rem\",\n          backgroundColor: \"#2196f3\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          marginLeft: \"0.5rem\"\n        },\n        children: \"\\uD83D\\uDCCA Log Current State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this);\n  };\n  useEffect(() => {\n    fetchEntriesForDate(selectedDate);\n    setEntry(\"\");\n    setShowToast(false);\n    setSaveMessage(\"\");\n  }, [selectedDate, user]);\n  const startRecording = async durationSeconds => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      setSaveMessage(\"Audio recording not supported in this browser.\");\n      setShowToast(true);\n      return;\n    }\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      audioChunksRef.current = [];\n      setRecordingDuration(durationSeconds);\n      setCurrentTimestamp(generateTimestamp());\n      setCountdown(durationSeconds);\n      mediaRecorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          audioChunksRef.current.push(event.data);\n        }\n      };\n      mediaRecorder.onstart = () => {\n        setIsRecording(true);\n        setShowToast(true);\n        setSaveMessage(\"Recording in progress...\");\n        countdownIntervalRef.current = setInterval(() => {\n          setCountdown(prev => {\n            if (prev <= 1) {\n              stopRecording();\n              return 0;\n            }\n            return prev - 1;\n          });\n        }, 1000);\n      };\n      mediaRecorder.onstop = async () => {\n        clearInterval(countdownIntervalRef.current);\n        setCountdown(0);\n        setIsRecording(false);\n        setRecordingDuration(0);\n        setSaveMessage(\"\");\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: \"audio/webm\"\n        });\n        try {\n          const formData = new FormData();\n          formData.append(\"file\", audioBlob, \"recording.webm\");\n          formData.append(\"user\", user);\n          const response = await fetch(PROXY_API_URL, {\n            method: \"POST\",\n            body: formData\n          });\n          if (!response.ok) throw new Error(`Transcription failed: ${response.statusText}`);\n          const data = await response.json();\n          if (data.transcription) {\n            setEntry(data.transcription);\n            setSaveMessage(\"Transcription received. Please review and save manually.\");\n            setShowToast(true);\n          } else {\n            setSaveMessage(\"No transcription received.\");\n            setShowToast(true);\n          }\n        } catch (error) {\n          setSaveMessage(\"Error during transcription: \" + error.message);\n          setShowToast(true);\n        }\n      };\n      mediaRecorder.start();\n    } catch (err) {\n      setSaveMessage(\"Could not start recording: \" + err.message);\n      setShowToast(true);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\") {\n      mediaRecorderRef.current.stop();\n    }\n    clearInterval(countdownIntervalRef.current);\n    setIsRecording(false);\n  };\n  const saveToGoogleSheet = async (date, time, text, username) => {\n    const SAVE_API_URL = window.location.hostname === \"localhost\" ? \"http://localhost:8090/saveEntry\" : \"https://journal-whisper.onrender.com/saveEntry\";\n    try {\n      console.log(\"Saving to Google Sheet:\", {\n        date,\n        time,\n        entry: text,\n        user: username\n      }); // Debug log\n\n      const response = await fetch(SAVE_API_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          date,\n          time,\n          entry: text,\n          user: username\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to save entry to Google Sheets\");\n      const result = await response.json();\n      console.log(\"Save result:\", result); // Debug log\n      return result;\n    } catch (error) {\n      console.error(\"Save error:\", error); // Debug log\n      setSaveMessage(\"Error saving to Google Sheets: \" + error.message);\n      setShowToast(true);\n      return null;\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!entry.trim()) {\n      setSaveMessage(\"Please enter something before saving.\");\n      setShowToast(true);\n      return;\n    }\n\n    // Animate click: scale down quickly then back up\n    setSaveClickAnimating(true);\n    setTimeout(() => setSaveClickAnimating(false), 150);\n\n    // Ensure we're using the same date format when saving\n    const saveDate = formatDateLocal(new Date()); // Use current date\n    const saveTime = new Date().toLocaleTimeString();\n    console.log(\"Saving entry with date:\", saveDate, \"time:\", saveTime, \"user:\", user); // Debug log\n\n    const result = await saveToGoogleSheet(saveDate, saveTime, entry, user);\n    if (result) {\n      setSaveAnimating(true);\n      setTimeout(() => setSaveAnimating(false), 500);\n      setSaveMessage(\"Journal entry saved successfully!\");\n      setShowToast(true);\n\n      // Add the new entry to the current entries list at the top (most recent first)\n      const newEntry = {\n        time: saveTime,\n        entry: entry\n      };\n\n      // Update cache timestamp since we're adding new data\n      setCacheTimestamps(prev => ({\n        ...prev,\n        [saveDate]: Date.now()\n      }));\n\n      // Only update entries if we're viewing the same date as we're saving to\n      const selectedDateKey = formatDateLocal(selectedDate);\n      if (saveDate === selectedDateKey) {\n        // Update both the displayed entries and the cache\n        setEntriesForDate(prevEntries => [newEntry, ...prevEntries]);\n        setEntriesCache(prev => ({\n          ...prev,\n          [saveDate]: [newEntry, ...(prev[saveDate] || [])]\n        }));\n      } else {\n        // If saving to a different date, just update the cache and switch to that date\n        setEntriesCache(prev => ({\n          ...prev,\n          [saveDate]: [newEntry, ...(prev[saveDate] || [])]\n        }));\n        setSelectedDate(new Date(saveDate + \"T00:00:00\"));\n      }\n      setEntry(\"\");\n      setCurrentTimestamp(generateTimestamp());\n      setLocalEntries(prev => ({\n        ...prev,\n        [saveDate]: entry\n      }));\n    } else {\n      setSaveMessage(\"Failed to save entry. Please try again.\");\n      setShowToast(true);\n    }\n  };\n  const handleRefreshTime = () => {\n    setCurrentTimestamp(generateTimestamp());\n    setSaveMessage(\"\");\n  };\n  useEffect(() => {\n    return () => {\n      if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\") {\n        mediaRecorderRef.current.stop();\n      }\n      clearInterval(countdownIntervalRef.current);\n    };\n  }, []);\n  useEffect(() => {\n    if (saveMessage) {\n      const timer = setTimeout(() => setSaveMessage(\"\"), 6000);\n      return () => clearTimeout(timer);\n    }\n  }, [saveMessage]);\n  const getButtonProgress = () => {\n    if (recordingDuration === 0) return \"0%\";\n    const percent = (recordingDuration - countdown) / recordingDuration * 100;\n    return `${percent}%`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: \"100vh\",\n      backgroundColor: \"#FFF8E7\",\n      padding: \"2rem\",\n      fontFamily: \"sans-serif\",\n      maxWidth: 700,\n      margin: \"auto\",\n      color: \"#222\"\n    },\n    children: [showToast && saveMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: \"40px\",\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        backgroundColor: \"#333\",\n        color: \"white\",\n        padding: \"10px 20px\",\n        borderRadius: \"20px\",\n        boxShadow: \"0 2px 10px rgba(0,0,0,0.7)\",\n        zIndex: 9999,\n        fontSize: \"1rem\",\n        opacity: 0.9,\n        userSelect: \"none\"\n      },\n      \"aria-live\": \"polite\",\n      children: saveMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 9\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: \"rgba(0, 0, 0, 0.7)\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        zIndex: 10000,\n        padding: \"2rem\"\n      },\n      onClick: closeModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"#FFF8E7\",\n          borderRadius: \"12px\",\n          padding: \"2rem\",\n          maxWidth: \"600px\",\n          maxHeight: \"80vh\",\n          overflowY: \"auto\",\n          boxShadow: \"0 10px 30px rgba(0, 0, 0, 0.3)\",\n          position: \"relative\"\n        },\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          style: {\n            position: \"absolute\",\n            top: \"1rem\",\n            right: \"1rem\",\n            background: \"none\",\n            border: \"none\",\n            fontSize: \"1.5rem\",\n            cursor: \"pointer\",\n            color: \"#666\",\n            padding: \"0.5rem\",\n            borderRadius: \"50%\",\n            width: \"40px\",\n            height: \"40px\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          title: \"Close\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            marginTop: 0,\n            marginBottom: \"1.5rem\",\n            color: \"#333\"\n          },\n          children: [\"\\uD83D\\uDCC5 Entries for \", modalDate, isRefreshingModal && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: \"0.8rem\",\n              color: \"#666\",\n              marginLeft: \"1rem\"\n            },\n            children: \"\\uD83D\\uDD04 Refreshing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 13\n        }, this), modalError && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: \"#fee\",\n            color: \"#c33\",\n            padding: \"0.75rem\",\n            borderRadius: \"6px\",\n            marginBottom: \"1rem\",\n            fontSize: \"0.9rem\",\n            border: \"1px solid #fcc\"\n          },\n          children: [\"\\u26A0\\uFE0F Error loading entries: \", modalError, modalEntries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"0.5rem\",\n              fontSize: \"0.8rem\"\n            },\n            children: \"Showing cached data below.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 831,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 15\n        }, this), isLoadingModal ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\",\n            color: \"#666\",\n            fontStyle: \"italic\",\n            padding: \"2rem\"\n          },\n          children: \"Loading entries...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 15\n        }, this) : modalEntries.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: \"0.9rem\",\n              color: \"#666\",\n              marginBottom: \"1rem\",\n              fontStyle: \"italic\"\n            },\n            children: [modalEntries.length, \" \", modalEntries.length === 1 ? \"entry\" : \"entries\", \" found\", !isCacheValid(modalDate) && modalEntries.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"#f39c12\",\n                marginLeft: \"0.5rem\"\n              },\n              children: \"(cached data)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 861,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              maxHeight: \"400px\",\n              overflowY: \"auto\"\n            },\n            children: modalEntries.map(({\n              time,\n              entry\n            }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: \"1.5rem\",\n                padding: \"1rem\",\n                backgroundColor: \"#f9f9f9\",\n                borderRadius: \"8px\",\n                border: \"1px solid #ddd\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontWeight: \"bold\",\n                  fontSize: \"0.9rem\",\n                  marginBottom: \"0.5rem\",\n                  color: \"#555\",\n                  borderBottom: \"1px solid #eee\",\n                  paddingBottom: \"0.25rem\"\n                },\n                children: [\"\\uD83D\\uDD52 \", time]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 878,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  whiteSpace: \"pre-wrap\",\n                  paddingTop: \"0.5rem\",\n                  lineHeight: \"1.5\"\n                },\n                children: entry\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 890,\n                columnNumber: 23\n              }, this)]\n            }, `${time}-${index}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 868,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\",\n            color: \"#666\",\n            fontStyle: \"italic\",\n            padding: \"2rem\"\n          },\n          children: \"No entries found for this date.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        marginBottom: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"My Logo\",\n        style: {\n          maxWidth: \"150px\",\n          height: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 927,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"User:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 933,\n          columnNumber: 11\n        }, this), \" \", user, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogout,\n          style: {\n            marginLeft: \"1rem\",\n            padding: \"0.3rem 0.75rem\",\n            fontSize: \"1rem\",\n            cursor: \"pointer\",\n            borderRadius: \"6px\",\n            border: \"1px solid #888\",\n            backgroundColor: \"#f0f0f0\",\n            color: \"#333\"\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 934,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 932,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 919,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"1rem\",\n        marginBottom: \"1rem\",\n        justifyContent: \"center\"\n      },\n      children: [{\n        label: \"30s\",\n        duration: 30\n      }, {\n        label: \"60s\",\n        duration: 60\n      }, {\n        label: \"180s\",\n        duration: 180\n      }].map(({\n        label,\n        duration\n      }) => {\n        const isActive = isRecording && recordingDuration === duration;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (isActive) {\n              stopRecording();\n            } else if (!isRecording) {\n              startRecording(duration);\n            }\n          },\n          disabled: isRecording && recordingDuration !== duration,\n          style: {\n            position: \"relative\",\n            height: \"60px\",\n            width: \"60px\",\n            borderRadius: isActive ? \"8px\" : \"50%\",\n            border: \"none\",\n            backgroundColor: isActive ? \"#FF0000\" : \"#FFD700\",\n            color: \"#000\",\n            fontSize: \"0.9rem\",\n            fontWeight: \"bold\",\n            boxShadow: isActive ? \"0 0 10px #ff4444\" : \"none\",\n            cursor: isRecording && recordingDuration !== duration ? \"not-allowed\" : \"pointer\",\n            transition: \"all 0.3s ease\",\n            userSelect: \"none\"\n          },\n          title: label,\n          children: [!isActive && label, isActive && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"absolute\",\n              bottom: 0,\n              left: 0,\n              height: \"8px\",\n              background: \"#27ae60\",\n              width: getButtonProgress(),\n              transition: \"width 0.3s ease\",\n              borderRadius: \"0 0 8px 8px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1000,\n            columnNumber: 17\n          }, this)]\n        }, label, true, {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 953,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: \"1rem\",\n        fontSize: \"1.1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\uD83D\\uDCC5 \", currentTimestamp.date, \" \\uD83D\\uDD52 \", currentTimestamp.time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1026,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRefreshTime,\n        style: {\n          marginLeft: \"1rem\",\n          padding: \"0.3rem 0.75rem\",\n          fontSize: \"0.9rem\",\n          cursor: \"pointer\",\n          borderRadius: \"6px\",\n          border: \"1px solid #888\",\n          backgroundColor: \"#f0f0f0\",\n          color: \"#333\"\n        },\n        title: \"Refresh timestamp\",\n        children: \"Refresh Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1029,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1019,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Write your journal entry here...\",\n        value: entry,\n        onChange: e => setEntry(e.target.value),\n        style: {\n          width: \"100%\",\n          height: \"150px\",\n          fontSize: \"1rem\",\n          padding: \"0.75rem\",\n          borderRadius: 8,\n          border: \"1px solid #ccc\",\n          resize: \"vertical\",\n          marginBottom: \"1rem\",\n          fontFamily: \"inherit\"\n        },\n        disabled: isRecording\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1048,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"right\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isRecording,\n          style: {\n            padding: \"0.6rem 1.5rem\",\n            fontSize: \"1rem\",\n            backgroundColor: saveAnimating ? \"#2ecc71\" : \"#27ae60\",\n            transform: saveAnimating ? \"scale(1.05)\" : saveClickAnimating ? \"scale(0.95)\" : \"scale(1)\",\n            transition: \"transform 0.15s ease\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"8px\",\n            cursor: isRecording ? \"not-allowed\" : \"pointer\",\n            userSelect: \"none\",\n            fontWeight: \"600\"\n          },\n          children: \"Save Entry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1066,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1065,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1047,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: \"2rem 0\",\n        borderColor: \"#ccc\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1092,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: \"1rem\"\n      },\n      children: \"\\uD83D\\uDCC5 Journal Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1093,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: \"1rem\",\n        fontSize: \"0.9rem\",\n        color: \"#666\",\n        fontStyle: \"italic\"\n      },\n      children: \"\\uD83D\\uDCA1 Click on any date to view all entries for that day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1097,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: date => {\n          console.log(\"Calendar date changed to:\", date, \"formatted as:\", formatDateLocal(date));\n          setSelectedDate(date);\n          setShowToast(false);\n          setSaveMessage(\"\");\n        },\n        onClickDay: handleDateClick,\n        value: selectedDate,\n        locale: \"en-US\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"1rem\",\n        padding: \"1rem\",\n        backgroundColor: \"#f9f9f9\",\n        borderRadius: \"8px\",\n        border: \"1px solid #ccc\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          marginBottom: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: 0\n          },\n          children: [\"Entries for \", formatDateLocal(selectedDate), isRefreshingEntries && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: \"0.8rem\",\n              color: \"#666\",\n              marginLeft: \"1rem\"\n            },\n            children: \"\\uD83D\\uDD04 Refreshing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRefreshEntries,\n          disabled: isLoadingEntries || isRefreshingEntries,\n          style: {\n            padding: \"0.4rem 0.8rem\",\n            fontSize: \"0.8rem\",\n            cursor: isLoadingEntries || isRefreshingEntries ? \"not-allowed\" : \"pointer\",\n            borderRadius: \"6px\",\n            border: \"1px solid #888\",\n            backgroundColor: \"#f0f0f0\",\n            color: \"#333\"\n          },\n          title: \"Refresh entries\",\n          children: \"\\uD83D\\uDD04 Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1131,\n        columnNumber: 9\n      }, this), fetchError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"#fee\",\n          color: \"#c33\",\n          padding: \"0.75rem\",\n          borderRadius: \"6px\",\n          marginBottom: \"1rem\",\n          fontSize: \"0.9rem\",\n          border: \"1px solid #fcc\"\n        },\n        children: [\"\\u26A0\\uFE0F Error loading entries: \", fetchError, entriesForDate.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"0.5rem\",\n            fontSize: \"0.8rem\"\n          },\n          children: \"Showing cached data below.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1177,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1164,\n        columnNumber: 11\n      }, this), isLoadingEntries ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          color: \"#666\",\n          fontStyle: \"italic\",\n          padding: \"1rem\"\n        },\n        children: \"Loading entries...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1185,\n        columnNumber: 11\n      }, this) : entriesForDate.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: \"0.9rem\",\n            color: \"#666\",\n            marginBottom: \"1rem\",\n            fontStyle: \"italic\"\n          },\n          children: [\"(\", entriesForDate.length, \" \", entriesForDate.length === 1 ? 'entry' : 'entries', \" found - Most Recent First)\", !isCacheValid(formatDateLocal(selectedDate)) && entriesForDate.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"#f39c12\",\n              marginLeft: \"0.5rem\"\n            },\n            children: \"(cached data)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1203,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1195,\n          columnNumber: 13\n        }, this), entriesForDate.map(({\n          time,\n          entry\n        }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"1rem\",\n            borderBottom: index < entriesForDate.length - 1 ? \"1px solid #ddd\" : \"none\",\n            paddingBottom: \"0.5rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: \"bold\",\n              fontSize: \"0.9rem\",\n              marginBottom: \"0.5rem\",\n              color: \"#555\",\n              borderBottom: \"1px solid #eee\",\n              paddingBottom: \"0.25rem\"\n            },\n            children: time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1217,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              whiteSpace: \"pre-wrap\",\n              paddingTop: \"0.25rem\",\n              lineHeight: \"1.4\"\n            },\n            children: entry\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1229,\n            columnNumber: 17\n          }, this)]\n        }, `${time}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1209,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          color: \"#666\",\n          fontStyle: \"italic\",\n          padding: \"1rem\"\n        },\n        children: \"No entries found for this date.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1240,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DebugSection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1252,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 718,\n    columnNumber: 5\n  }, this);\n}\n_s(Journal, \"6XF5QAOuhVEgIHBydByhU23qfzc=\");\n_c = Journal;\nvar _c;\n$RefreshReg$(_c, \"Journal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Calendar","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","PROXY_API_URL","window","location","hostname","formatDateLocal","date","dateObj","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","Journal","user","onLogout","_s","entry","setEntry","isRecording","setIsRecording","showToast","setShowToast","saveMessage","setSaveMessage","currentTimestamp","setCurrentTimestamp","time","countdown","setCountdown","recordingDuration","setRecordingDuration","selectedDate","setSelectedDate","entriesForDate","setEntriesForDate","localEntries","setLocalEntries","entriesCache","setEntriesCache","cacheTimestamps","setCacheTimestamps","saveAnimating","setSaveAnimating","saveClickAnimating","setSaveClickAnimating","isLoadingEntries","setIsLoadingEntries","isRefreshingEntries","setIsRefreshingEntries","fetchError","setFetchError","showModal","setShowModal","modalEntries","setModalEntries","modalDate","setModalDate","isLoadingModal","setIsLoadingModal","isRefreshingModal","setIsRefreshingModal","modalError","setModalError","mediaRecorderRef","audioChunksRef","countdownIntervalRef","CACHE_EXPIRY_MS","generateTimestamp","now","toLocaleTimeString","isCacheValid","dateKey","timestamp","fetchEntriesForDate","dateToFetch","forceRefresh","console","group","log","hasCachedData","cacheIsValid","groupEnd","FETCH_API_URL","requestBody","JSON","stringify","response","fetch","method","headers","body","status","statusText","Object","fromEntries","entries","ok","Error","responseText","text","data","parse","parseError","error","keys","length","sortedEntries","sort","a","b","timeA","timeB","prev","newCache","newTimestamps","err","message","stack","handleDateClick","clickedDate","closeModal","handleRefreshEntries","DebugSection","testAPICall","testDate","style","marginTop","padding","backgroundColor","borderRadius","border","children","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","color","onClick","cursor","marginLeft","startRecording","durationSeconds","navigator","mediaDevices","getUserMedia","stream","audio","mediaRecorder","MediaRecorder","current","ondataavailable","event","size","push","onstart","setInterval","stopRecording","onstop","clearInterval","audioBlob","Blob","type","formData","FormData","append","json","transcription","start","state","stop","saveToGoogleSheet","username","SAVE_API_URL","result","handleSubmit","e","preventDefault","trim","setTimeout","saveDate","saveTime","newEntry","selectedDateKey","prevEntries","handleRefreshTime","timer","clearTimeout","getButtonProgress","percent","minHeight","fontFamily","maxWidth","margin","position","top","left","transform","boxShadow","zIndex","opacity","userSelect","right","bottom","display","justifyContent","alignItems","maxHeight","overflowY","stopPropagation","background","width","height","title","marginBottom","textAlign","fontStyle","map","index","fontWeight","borderBottom","paddingBottom","whiteSpace","paddingTop","lineHeight","src","alt","gap","label","duration","isActive","disabled","transition","onSubmit","placeholder","value","onChange","target","resize","borderColor","onClickDay","locale","_c","$RefreshReg$"],"sources":["/Users/hye/Documents/journal-whisper/src/Journal.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport logo from \"./assets/logo.png\";\n\nconst PROXY_API_URL =\n  window.location.hostname === \"localhost\"\n    ? \"http://localhost:8090/transcribeAudio\"\n    : \"https://journal-whisper.onrender.com/transcribeAudio\";\n\nconst formatDateLocal = (date) => {\n  // Ensure we're working with a proper Date object\n  const dateObj = date instanceof Date ? date : new Date(date);\n  \n  // Use local timezone instead of UTC to avoid date shifting\n  const year = dateObj.getFullYear();\n  const month = String(dateObj.getMonth() + 1).padStart(2, \"0\");\n  const day = String(dateObj.getDate()).padStart(2, \"0\");\n  return `${year}-${month}-${day}`;\n};\n\nexport default function Journal({ user, onLogout }) {\n  const [entry, setEntry] = useState(\"\");\n  const [isRecording, setIsRecording] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const [saveMessage, setSaveMessage] = useState(\"\");\n  const [currentTimestamp, setCurrentTimestamp] = useState({\n    date: \"\",\n    time: \"\",\n  });\n  const [countdown, setCountdown] = useState(0);\n  const [recordingDuration, setRecordingDuration] = useState(0);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [entriesForDate, setEntriesForDate] = useState([]);\n  const [localEntries, setLocalEntries] = useState({});\n  const [entriesCache, setEntriesCache] = useState({}); // Cache for fetched entries\n  const [cacheTimestamps, setCacheTimestamps] = useState({}); // Track when data was cached\n  const [saveAnimating, setSaveAnimating] = useState(false);\n  const [saveClickAnimating, setSaveClickAnimating] = useState(false);\n  const [isLoadingEntries, setIsLoadingEntries] = useState(false);\n  const [isRefreshingEntries, setIsRefreshingEntries] = useState(false);\n  const [fetchError, setFetchError] = useState(null);\n  \n  // New states for modal functionality\n  const [showModal, setShowModal] = useState(false);\n  const [modalEntries, setModalEntries] = useState([]);\n  const [modalDate, setModalDate] = useState(\"\");\n  const [isLoadingModal, setIsLoadingModal] = useState(false);\n  const [isRefreshingModal, setIsRefreshingModal] = useState(false);\n  const [modalError, setModalError] = useState(null);\n\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const countdownIntervalRef = useRef(null);\n\n  // Cache expiry time (5 minutes)\n  const CACHE_EXPIRY_MS = 5 * 60 * 1000;\n\n  const generateTimestamp = () => {\n    const now = new Date();\n    return {\n      date: formatDateLocal(now),\n      time: now.toLocaleTimeString(),\n    };\n  };\n\n  useEffect(() => {\n    setCurrentTimestamp(generateTimestamp());\n  }, []);\n\n  const isCacheValid = (dateKey) => {\n    const timestamp = cacheTimestamps[dateKey];\n    if (!timestamp) return false;\n    return Date.now() - timestamp < CACHE_EXPIRY_MS;\n  };\n\n  const fetchEntriesForDate = async (dateToFetch, forceRefresh = false) => {\n    const dateKey = formatDateLocal(dateToFetch);\n    \n    // ENHANCED DEBUG LOGGING\n    console.group(`🔍 FETCH DEBUG - Date: ${dateKey}`);\n    console.log(\"1. Input date object:\", dateToFetch);\n    console.log(\"2. Formatted date key:\", dateKey);\n    console.log(\"3. Current user:\", user);\n    console.log(\"4. Force refresh:\", forceRefresh);\n    console.log(\"5. Current cache:\", entriesCache);\n    console.log(\"6. Cache timestamps:\", cacheTimestamps);\n    \n    // Show cached data immediately if available and valid (unless force refresh)\n    const hasCachedData = entriesCache[dateKey];\n    const cacheIsValid = isCacheValid(dateKey);\n    \n    console.log(\"7. Has cached data:\", hasCachedData);\n    console.log(\"8. Cache is valid:\", cacheIsValid);\n    \n    if (!forceRefresh && hasCachedData && cacheIsValid) {\n      console.log(\"✅ Using valid cache data\");\n      console.groupEnd();\n      setEntriesForDate(entriesCache[dateKey]);\n      setFetchError(null);\n      return;\n    }\n\n    // If we have cached data but it's stale, show it while loading fresh data\n    if (hasCachedData && !forceRefresh) {\n      console.log(\"⚠️ Using stale cache while refreshing\");\n      setEntriesForDate(entriesCache[dateKey]);\n      setIsRefreshingEntries(true);\n      setFetchError(null);\n    } else {\n      console.log(\"🔄 Loading fresh data\");\n      setIsLoadingEntries(true);\n      setFetchError(null);\n    }\n\n    const FETCH_API_URL =\n      window.location.hostname === \"localhost\"\n        ? \"http://localhost:8090/getEntries\"\n        : \"https://journal-whisper.onrender.com/getEntries\";\n\n    console.log(\"9. API URL:\", FETCH_API_URL);\n\n    try {\n      const requestBody = {\n        user: user,\n        date: dateKey,\n        timestamp: Date.now()\n      };\n      \n      console.log(\"10. Request body:\", JSON.stringify(requestBody, null, 2));\n      console.log(\"11. Request headers:\", {\n        \"Content-Type\": \"application/json\",\n        \"Cache-Control\": \"no-cache, no-store, must-revalidate\",\n        \"Pragma\": \"no-cache\",\n        \"Expires\": \"0\"\n      });\n      \n      console.log(\"12. 🚀 Sending fetch request...\");\n      \n      const response = await fetch(FETCH_API_URL, {\n        method: \"POST\",\n        headers: { \n          \"Content-Type\": \"application/json\",\n          \"Cache-Control\": \"no-cache, no-store, must-revalidate\",\n          \"Pragma\": \"no-cache\",\n          \"Expires\": \"0\"\n        },\n        body: JSON.stringify(requestBody),\n      });\n      \n      console.log(\"13. Response received:\");\n      console.log(\"    - Status:\", response.status);\n      console.log(\"    - Status text:\", response.statusText);\n      console.log(\"    - Headers:\", Object.fromEntries(response.headers.entries()));\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch entries: ${response.status} ${response.statusText}`);\n      }\n      \n      // Get response as text first to see raw data\n      const responseText = await response.text();\n      console.log(\"14. Raw response text:\", responseText);\n      \n      // Try to parse as JSON\n      let data;\n      try {\n        data = JSON.parse(responseText);\n        console.log(\"15. Parsed JSON data:\", data);\n      } catch (parseError) {\n        console.error(\"❌ JSON parse error:\", parseError);\n        console.log(\"Response was not valid JSON:\", responseText);\n        throw new Error(\"Invalid JSON response from server\");\n      }\n      \n      // Check data structure\n      console.log(\"16. Data structure analysis:\");\n      console.log(\"    - Type of data:\", typeof data);\n      console.log(\"    - Data keys:\", Object.keys(data || {}));\n      console.log(\"    - data.entries type:\", typeof data.entries);\n      console.log(\"    - data.entries length:\", data.entries ? data.entries.length : \"N/A\");\n      console.log(\"    - data.entries content:\", data.entries);\n      \n      // Sort entries by time in descending order (most recent first)\n      const sortedEntries = (data.entries || []).sort((a, b) => {\n        console.log(\"17. Sorting entry:\", a, \"vs\", b);\n        const timeA = new Date(`1970-01-01 ${a.time}`);\n        const timeB = new Date(`1970-01-01 ${b.time}`);\n        return timeB - timeA;\n      });\n      \n      console.log(\"18. Final sorted entries:\", sortedEntries);\n      \n      // Update cache with timestamp\n      setEntriesCache(prev => {\n        const newCache = {\n          ...prev,\n          [dateKey]: sortedEntries\n        };\n        console.log(\"19. Updated cache:\", newCache);\n        return newCache;\n      });\n      \n      setCacheTimestamps(prev => {\n        const newTimestamps = {\n          ...prev,\n          [dateKey]: Date.now()\n        };\n        console.log(\"20. Updated cache timestamps:\", newTimestamps);\n        return newTimestamps;\n      });\n      \n      setEntriesForDate(sortedEntries);\n      setFetchError(null);\n      \n      console.log(\"✅ SUCCESS: Entries fetched and set\");\n      \n    } catch (err) {\n      console.error(\"❌ ERROR in fetchEntriesForDate:\", err);\n      console.log(\"Error details:\");\n      console.log(\"  - Message:\", err.message);\n      console.log(\"  - Stack:\", err.stack);\n      \n      // If we have cached data, keep showing it with error message\n      if (!hasCachedData) {\n        console.log(\"No cached data available, setting empty array\");\n        setEntriesForDate([]);\n        // Cache empty result to avoid repeated failed requests\n        setEntriesCache(prev => ({\n          ...prev,\n          [dateKey]: []\n        }));\n        setCacheTimestamps(prev => ({\n          ...prev,\n          [dateKey]: Date.now()\n        }));\n      } else {\n        console.log(\"Keeping cached data due to error\");\n      }\n      \n      setFetchError(err.message);\n      \n    } finally {\n      console.log(\"21. 🏁 Fetch operation complete\");\n      console.groupEnd();\n      setIsLoadingEntries(false);\n      setIsRefreshingEntries(false);\n    }\n  };\n\n  // Enhanced function to handle date clicks and show modal\n  const handleDateClick = async (clickedDate) => {\n    const dateKey = formatDateLocal(clickedDate);\n    \n    console.group(`🎯 DATE CLICK DEBUG - Date: ${dateKey}`);\n    console.log(\"1. Clicked date object:\", clickedDate);\n    console.log(\"2. Formatted date key:\", dateKey);\n    console.log(\"3. Current user:\", user);\n    \n    setModalDate(dateKey);\n    setShowModal(true);\n    setModalError(null);\n\n    // Check cache first and show if valid\n    const hasCachedData = entriesCache[dateKey];\n    const cacheIsValid = isCacheValid(dateKey);\n    \n    console.log(\"4. Has cached data:\", hasCachedData);\n    console.log(\"5. Cache is valid:\", cacheIsValid);\n    \n    if (hasCachedData && cacheIsValid) {\n      console.log(\"✅ Using valid cache for modal\");\n      console.groupEnd();\n      setModalEntries(entriesCache[dateKey]);\n      setIsLoadingModal(false);\n      return;\n    }\n\n    // If we have cached data but it's stale, show it while loading fresh data\n    if (hasCachedData) {\n      console.log(\"⚠️ Using stale cache for modal while refreshing\");\n      setModalEntries(entriesCache[dateKey]);\n      setIsRefreshingModal(true);\n    } else {\n      console.log(\"🔄 Loading fresh data for modal\");\n      setIsLoadingModal(true);\n    }\n\n    const FETCH_API_URL =\n      window.location.hostname === \"localhost\"\n        ? \"http://localhost:8090/getEntries\"\n        : \"https://journal-whisper.onrender.com/getEntries\";\n\n    console.log(\"6. Modal API URL:\", FETCH_API_URL);\n\n    try {\n      const requestBody = {\n        user: user,\n        date: dateKey,\n        timestamp: Date.now()\n      };\n      \n      console.log(\"7. Modal request body:\", JSON.stringify(requestBody, null, 2));\n      console.log(\"8. 🚀 Sending modal fetch request...\");\n      \n      const response = await fetch(FETCH_API_URL, {\n        method: \"POST\",\n        headers: { \n          \"Content-Type\": \"application/json\",\n          \"Cache-Control\": \"no-cache, no-store, must-revalidate\",\n          \"Pragma\": \"no-cache\",\n          \"Expires\": \"0\"\n        },\n        body: JSON.stringify(requestBody),\n      });\n      \n      console.log(\"9. Modal response:\");\n      console.log(\"    - Status:\", response.status);\n      console.log(\"    - Status text:\", response.statusText);\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch entries: ${response.status} ${response.statusText}`);\n      }\n      \n      const responseText = await response.text();\n      console.log(\"10. Modal raw response:\", responseText);\n      \n      const data = JSON.parse(responseText);\n      console.log(\"11. Modal parsed data:\", data);\n      \n      // Sort entries by time in descending order (most recent first)\n      const sortedEntries = (data.entries || []).sort((a, b) => {\n        const timeA = new Date(`1970-01-01 ${a.time}`);\n        const timeB = new Date(`1970-01-01 ${b.time}`);\n        return timeB - timeA;\n      });\n      \n      console.log(\"12. Modal sorted entries:\", sortedEntries);\n      \n      // Update cache with timestamp\n      setEntriesCache(prev => ({\n        ...prev,\n        [dateKey]: sortedEntries\n      }));\n      setCacheTimestamps(prev => ({\n        ...prev,\n        [dateKey]: Date.now()\n      }));\n      \n      setModalEntries(sortedEntries);\n      setModalError(null);\n      \n      console.log(\"✅ SUCCESS: Modal entries loaded\");\n      \n    } catch (err) {\n      console.error(\"❌ ERROR in modal fetch:\", err);\n      \n      if (!hasCachedData) {\n        setModalEntries([]);\n        setEntriesCache(prev => ({\n          ...prev,\n          [dateKey]: []\n        }));\n        setCacheTimestamps(prev => ({\n          ...prev,\n          [dateKey]: Date.now()\n        }));\n      }\n      \n      setModalError(err.message);\n      \n    } finally {\n      console.log(\"13. 🏁 Modal fetch complete\");\n      console.groupEnd();\n      setIsLoadingModal(false);\n      setIsRefreshingModal(false);\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    setModalEntries([]);\n    setModalDate(\"\");\n    setModalError(null);\n  };\n\n  const handleRefreshEntries = () => {\n    fetchEntriesForDate(selectedDate, true);\n  };\n\n  // Debug Section Component\n  const DebugSection = () => {\n    const testAPICall = async () => {\n      console.group(\"🧪 MANUAL API TEST\");\n      \n      const testDate = \"2025-06-03\"; // Change this to a date you know has entries\n      const FETCH_API_URL =\n        window.location.hostname === \"localhost\"\n          ? \"http://localhost:8090/getEntries\"\n          : \"https://journal-whisper.onrender.com/getEntries\";\n\n      try {\n        console.log(\"Testing with date:\", testDate);\n        console.log(\"Testing with user:\", user);\n        \n        const response = await fetch(FETCH_API_URL, {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            user: user,\n            date: testDate,\n            timestamp: Date.now()\n          }),\n        });\n        \n        console.log(\"Test response status:\", response.status);\n        const responseText = await response.text();\n        console.log(\"Test response text:\", responseText);\n        \n        if (response.ok) {\n          const data = JSON.parse(responseText);\n          console.log(\"Test response data:\", data);\n        }\n        \n      } catch (error) {\n        console.error(\"Test API call failed:\", error);\n      }\n      \n      console.groupEnd();\n    };\n\n    return (\n      <div style={{ \n        marginTop: \"2rem\", \n        padding: \"1rem\", \n        backgroundColor: \"#f0f0f0\", \n        borderRadius: \"8px\",\n        border: \"2px solid #orange\"\n      }}>\n        <h4>🐛 Debug Tools</h4>\n        <p style={{ fontSize: \"0.9rem\", color: \"#666\" }}>\n          Current user: <strong>{user}</strong><br/>\n          Current cache: {Object.keys(entriesCache).length} dates cached<br/>\n          Selected date: <strong>{formatDateLocal(selectedDate)}</strong>\n        </p>\n        <button \n          onClick={testAPICall}\n          style={{\n            padding: \"0.5rem 1rem\",\n            backgroundColor: \"#ff9800\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\"\n          }}\n        >\n          🧪 Test API Call\n        </button>\n        <button \n          onClick={() => {\n            console.log(\"Current state:\");\n            console.log(\"- user:\", user);\n            console.log(\"- selectedDate:\", selectedDate);\n            console.log(\"- entriesCache:\", entriesCache);\n            console.log(\"- cacheTimestamps:\", cacheTimestamps);\n            console.log(\"- entriesForDate:\", entriesForDate);\n          }}\n          style={{\n            padding: \"0.5rem 1rem\",\n            backgroundColor: \"#2196f3\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n            marginLeft: \"0.5rem\"\n          }}\n        >\n          📊 Log Current State\n        </button>\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    fetchEntriesForDate(selectedDate);\n    setEntry(\"\");\n    setShowToast(false);\n    setSaveMessage(\"\");\n  }, [selectedDate, user]);\n\n  const startRecording = async (durationSeconds) => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      setSaveMessage(\"Audio recording not supported in this browser.\");\n      setShowToast(true);\n      return;\n    }\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      audioChunksRef.current = [];\n\n      setRecordingDuration(durationSeconds);\n      setCurrentTimestamp(generateTimestamp());\n      setCountdown(durationSeconds);\n\n      mediaRecorder.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          audioChunksRef.current.push(event.data);\n        }\n      };\n\n      mediaRecorder.onstart = () => {\n        setIsRecording(true);\n        setShowToast(true);\n        setSaveMessage(\"Recording in progress...\");\n        countdownIntervalRef.current = setInterval(() => {\n          setCountdown((prev) => {\n            if (prev <= 1) {\n              stopRecording();\n              return 0;\n            }\n            return prev - 1;\n          });\n        }, 1000);\n      };\n\n      mediaRecorder.onstop = async () => {\n        clearInterval(countdownIntervalRef.current);\n        setCountdown(0);\n        setIsRecording(false);\n        setRecordingDuration(0);\n        setSaveMessage(\"\");\n\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: \"audio/webm\",\n        });\n        try {\n          const formData = new FormData();\n          formData.append(\"file\", audioBlob, \"recording.webm\");\n          formData.append(\"user\", user);\n\n          const response = await fetch(PROXY_API_URL, {\n            method: \"POST\",\n            body: formData,\n          });\n\n          if (!response.ok)\n            throw new Error(`Transcription failed: ${response.statusText}`);\n\n          const data = await response.json();\n          if (data.transcription) {\n            setEntry(data.transcription);\n            setSaveMessage(\n              \"Transcription received. Please review and save manually.\"\n            );\n            setShowToast(true);\n          } else {\n            setSaveMessage(\"No transcription received.\");\n            setShowToast(true);\n          }\n        } catch (error) {\n          setSaveMessage(\"Error during transcription: \" + error.message);\n          setShowToast(true);\n        }\n      };\n\n      mediaRecorder.start();\n    } catch (err) {\n      setSaveMessage(\"Could not start recording: \" + err.message);\n      setShowToast(true);\n    }\n  };\n\n  const stopRecording = () => {\n    if (\n      mediaRecorderRef.current &&\n      mediaRecorderRef.current.state !== \"inactive\"\n    ) {\n      mediaRecorderRef.current.stop();\n    }\n    clearInterval(countdownIntervalRef.current);\n    setIsRecording(false);\n  };\n\n  const saveToGoogleSheet = async (date, time, text, username) => {\n    const SAVE_API_URL =\n      window.location.hostname === \"localhost\"\n        ? \"http://localhost:8090/saveEntry\"\n        : \"https://journal-whisper.onrender.com/saveEntry\";\n\n    try {\n      console.log(\"Saving to Google Sheet:\", { date, time, entry: text, user: username }); // Debug log\n      \n      const response = await fetch(SAVE_API_URL, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ date, time, entry: text, user: username }),\n      });\n      if (!response.ok)\n        throw new Error(\"Failed to save entry to Google Sheets\");\n      \n      const result = await response.json();\n      console.log(\"Save result:\", result); // Debug log\n      return result;\n    } catch (error) {\n      console.error(\"Save error:\", error); // Debug log\n      setSaveMessage(\"Error saving to Google Sheets: \" + error.message);\n      setShowToast(true);\n      return null;\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!entry.trim()) {\n      setSaveMessage(\"Please enter something before saving.\");\n      setShowToast(true);\n      return;\n    }\n\n    // Animate click: scale down quickly then back up\n    setSaveClickAnimating(true);\n    setTimeout(() => setSaveClickAnimating(false), 150);\n\n    // Ensure we're using the same date format when saving\n    const saveDate = formatDateLocal(new Date()); // Use current date\n    const saveTime = new Date().toLocaleTimeString();\n    \n    console.log(\"Saving entry with date:\", saveDate, \"time:\", saveTime, \"user:\", user); // Debug log\n\n    const result = await saveToGoogleSheet(\n      saveDate,\n      saveTime,\n      entry,\n      user\n    );\n    \n    if (result) {\n      setSaveAnimating(true);\n      setTimeout(() => setSaveAnimating(false), 500);\n      setSaveMessage(\"Journal entry saved successfully!\");\n      setShowToast(true);\n\n      // Add the new entry to the current entries list at the top (most recent first)\n      const newEntry = {\n        time: saveTime,\n        entry: entry,\n      };\n      \n      // Update cache timestamp since we're adding new data\n      setCacheTimestamps(prev => ({\n        ...prev,\n        [saveDate]: Date.now()\n      }));\n      \n      // Only update entries if we're viewing the same date as we're saving to\n      const selectedDateKey = formatDateLocal(selectedDate);\n      if (saveDate === selectedDateKey) {\n        // Update both the displayed entries and the cache\n        setEntriesForDate(prevEntries => [newEntry, ...prevEntries]);\n        setEntriesCache(prev => ({\n          ...prev,\n          [saveDate]: [newEntry, ...(prev[saveDate] || [])]\n        }));\n      } else {\n        // If saving to a different date, just update the cache and switch to that date\n        setEntriesCache(prev => ({\n          ...prev,\n          [saveDate]: [newEntry, ...(prev[saveDate] || [])]\n        }));\n        setSelectedDate(new Date(saveDate + \"T00:00:00\"));\n      }\n\n      setEntry(\"\");\n      setCurrentTimestamp(generateTimestamp());\n\n      setLocalEntries((prev) => ({\n        ...prev,\n        [saveDate]: entry,\n      }));\n    } else {\n      setSaveMessage(\"Failed to save entry. Please try again.\");\n      setShowToast(true);\n    }\n  };\n\n  const handleRefreshTime = () => {\n    setCurrentTimestamp(generateTimestamp());\n    setSaveMessage(\"\");\n  };\n\n  useEffect(() => {\n    return () => {\n      if (\n        mediaRecorderRef.current &&\n        mediaRecorderRef.current.state !== \"inactive\"\n      ) {\n        mediaRecorderRef.current.stop();\n      }\n      clearInterval(countdownIntervalRef.current);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (saveMessage) {\n      const timer = setTimeout(() => setSaveMessage(\"\"), 6000);\n      return () => clearTimeout(timer);\n    }\n  }, [saveMessage]);\n\n  const getButtonProgress = () => {\n    if (recordingDuration === 0) return \"0%\";\n    const percent = ((recordingDuration - countdown) / recordingDuration) * 100;\n    return `${percent}%`;\n  };\n\n  return (\n    <div\n      style={{\n        minHeight: \"100vh\",\n        backgroundColor: \"#FFF8E7\",\n        padding: \"2rem\",\n        fontFamily: \"sans-serif\",\n        maxWidth: 700,\n        margin: \"auto\",\n        color: \"#222\",\n      }}\n    >\n      {showToast && saveMessage && (\n        <div\n          style={{\n            position: \"fixed\",\n            top: \"40px\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n            backgroundColor: \"#333\",\n            color: \"white\",\n            padding: \"10px 20px\",\n            borderRadius: \"20px\",\n            boxShadow: \"0 2px 10px rgba(0,0,0,0.7)\",\n            zIndex: 9999,\n            fontSize: \"1rem\",\n            opacity: 0.9,\n            userSelect: \"none\",\n          }}\n          aria-live=\"polite\"\n        >\n          {saveMessage}\n        </div>\n      )}\n\n      {/* Modal for showing entries when date is clicked */}\n      {showModal && (\n        <div\n          style={{\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            backgroundColor: \"rgba(0, 0, 0, 0.7)\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            zIndex: 10000,\n            padding: \"2rem\",\n          }}\n          onClick={closeModal}\n        >\n          <div\n            style={{\n              backgroundColor: \"#FFF8E7\",\n              borderRadius: \"12px\",\n              padding: \"2rem\",\n              maxWidth: \"600px\",\n              maxHeight: \"80vh\",\n              overflowY: \"auto\",\n              boxShadow: \"0 10px 30px rgba(0, 0, 0, 0.3)\",\n              position: \"relative\",\n            }}\n            onClick={(e) => e.stopPropagation()}\n          >\n            {/* Close button */}\n            <button\n              onClick={closeModal}\n              style={{\n                position: \"absolute\",\n                top: \"1rem\",\n                right: \"1rem\",\n                background: \"none\",\n                border: \"none\",\n                fontSize: \"1.5rem\",\n                cursor: \"pointer\",\n                color: \"#666\",\n                padding: \"0.5rem\",\n                borderRadius: \"50%\",\n                width: \"40px\",\n                height: \"40px\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n              title=\"Close\"\n            >\n              ×\n            </button>\n\n            <h2 style={{ marginTop: 0, marginBottom: \"1.5rem\", color: \"#333\" }}>\n              📅 Entries for {modalDate}\n              {isRefreshingModal && (\n                <span style={{ fontSize: \"0.8rem\", color: \"#666\", marginLeft: \"1rem\" }}>\n                  🔄 Refreshing...\n                </span>\n              )}\n            </h2>\n\n            {modalError && (\n              <div\n                style={{\n                  backgroundColor: \"#fee\",\n                  color: \"#c33\",\n                  padding: \"0.75rem\",\n                  borderRadius: \"6px\",\n                  marginBottom: \"1rem\",\n                  fontSize: \"0.9rem\",\n                  border: \"1px solid #fcc\",\n                }}\n              >\n                ⚠️ Error loading entries: {modalError}\n                {modalEntries.length > 0 && (\n                  <div style={{ marginTop: \"0.5rem\", fontSize: \"0.8rem\" }}>\n                    Showing cached data below.\n                  </div>\n                )}\n              </div>\n            )}\n\n            {isLoadingModal ? (\n              <div\n                style={{\n                  textAlign: \"center\",\n                  color: \"#666\",\n                  fontStyle: \"italic\",\n                  padding: \"2rem\",\n                }}\n              >\n                Loading entries...\n              </div>\n            ) : modalEntries.length > 0 ? (\n              <>\n                <div\n                  style={{\n                    fontSize: \"0.9rem\",\n                    color: \"#666\",\n                    marginBottom: \"1rem\",\n                    fontStyle: \"italic\",\n                  }}\n                >\n                  {modalEntries.length} {modalEntries.length === 1 ? \"entry\" : \"entries\"} found\n                  {!isCacheValid(modalDate) && modalEntries.length > 0 && (\n                    <span style={{ color: \"#f39c12\", marginLeft: \"0.5rem\" }}>\n                      (cached data)\n                    </span>\n                  )}\n                </div>\n                <div style={{ maxHeight: \"400px\", overflowY: \"auto\" }}>\n                  {modalEntries.map(({ time, entry }, index) => (\n                    <div\n                      key={`${time}-${index}`}\n                      style={{\n                        marginBottom: \"1.5rem\",\n                        padding: \"1rem\",\n                        backgroundColor: \"#f9f9f9\",\n                        borderRadius: \"8px\",\n                        border: \"1px solid #ddd\",\n                      }}\n                    >\n                      <div\n                        style={{\n                          fontWeight: \"bold\",\n                          fontSize: \"0.9rem\",\n                          marginBottom: \"0.5rem\",\n                          color: \"#555\",\n                          borderBottom: \"1px solid #eee\",\n                          paddingBottom: \"0.25rem\",\n                        }}\n                      >\n                        🕒 {time}\n                      </div>\n                      <div\n                        style={{\n                          whiteSpace: \"pre-wrap\",\n                          paddingTop: \"0.5rem\",\n                          lineHeight: \"1.5\",\n                        }}\n                      >\n                        {entry}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </>\n            ) : (\n              <div\n                style={{\n                  textAlign: \"center\",\n                  color: \"#666\",\n                  fontStyle: \"italic\",\n                  padding: \"2rem\",\n                }}\n              >\n                No entries found for this date.\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          marginBottom: \"1rem\",\n        }}\n      >\n        <img\n          src={logo}\n          alt=\"My Logo\"\n          style={{ maxWidth: \"150px\", height: \"auto\" }}\n        />\n        <div>\n          <strong>User:</strong> {user}\n          <button\n            onClick={onLogout}\n            style={{\n              marginLeft: \"1rem\",\n              padding: \"0.3rem 0.75rem\",\n              fontSize: \"1rem\",\n              cursor: \"pointer\",\n              borderRadius: \"6px\",\n              border: \"1px solid #888\",\n              backgroundColor: \"#f0f0f0\",\n              color: \"#333\",\n            }}\n          >\n            Logout\n          </button>\n        </div>\n      </div>\n\n      {/* Recording buttons */}\n      <div\n        style={{\n          display: \"flex\",\n          gap: \"1rem\",\n          marginBottom: \"1rem\",\n          justifyContent: \"center\",\n        }}\n      >\n        {[\n          { label: \"30s\", duration: 30 },\n          { label: \"60s\", duration: 60 },\n          { label: \"180s\", duration: 180 },\n        ].map(({ label, duration }) => {\n          const isActive = isRecording && recordingDuration === duration;\n          return (\n            <button\n              key={label}\n              onClick={() => {\n                if (isActive) {\n                  stopRecording();\n                } else if (!isRecording) {\n                  startRecording(duration);\n                }\n              }}\n              disabled={isRecording && recordingDuration !== duration}\n              style={{\n                position: \"relative\",\n                height: \"60px\",\n                width: \"60px\",\n                borderRadius: isActive ? \"8px\" : \"50%\",\n                border: \"none\",\n                backgroundColor: isActive ? \"#FF0000\" : \"#FFD700\",\n                color: \"#000\",\n                fontSize: \"0.9rem\",\n                fontWeight: \"bold\",\n                boxShadow: isActive ? \"0 0 10px #ff4444\" : \"none\",\n                cursor:\n                  isRecording && recordingDuration !== duration\n                    ? \"not-allowed\"\n                    : \"pointer\",\n                transition: \"all 0.3s ease\",\n                userSelect: \"none\",\n              }}\n              title={label}\n            >\n              {!isActive && label}\n              {isActive && (\n                <div\n                  style={{\n                    position: \"absolute\",\n                    bottom: 0,\n                    left: 0,\n                    height: \"8px\",\n                    background: \"#27ae60\",\n                    width: getButtonProgress(),\n                    transition: \"width 0.3s ease\",\n                    borderRadius: \"0 0 8px 8px\",\n                  }}\n                />\n              )}\n            </button>\n          );\n        })}\n      </div>\n\n      {/* Timestamp */}\n      <div\n        style={{\n          textAlign: \"center\",\n          marginBottom: \"1rem\",\n          fontSize: \"1.1rem\",\n        }}\n      >\n        <span>\n          📅 {currentTimestamp.date} 🕒 {currentTimestamp.time}\n        </span>\n        <button\n          onClick={handleRefreshTime}\n          style={{\n            marginLeft: \"1rem\",\n            padding: \"0.3rem 0.75rem\",\n            fontSize: \"0.9rem\",\n            cursor: \"pointer\",\n            borderRadius: \"6px\",\n            border: \"1px solid #888\",\n            backgroundColor: \"#f0f0f0\",\n            color: \"#333\",\n          }}\n          title=\"Refresh timestamp\"\n        >\n          Refresh Time\n        </button>\n      </div>\n\n      <form onSubmit={handleSubmit}>\n        <textarea\n          placeholder=\"Write your journal entry here...\"\n          value={entry}\n          onChange={(e) => setEntry(e.target.value)}\n          style={{\n            width: \"100%\",\n            height: \"150px\",\n            fontSize: \"1rem\",\n            padding: \"0.75rem\",\n            borderRadius: 8,\n            border: \"1px solid #ccc\",\n            resize: \"vertical\",\n            marginBottom: \"1rem\",\n            fontFamily: \"inherit\",\n          }}\n          disabled={isRecording}\n        />\n        <div style={{ textAlign: \"right\" }}>\n          <button\n            type=\"submit\"\n            disabled={isRecording}\n            style={{\n              padding: \"0.6rem 1.5rem\",\n              fontSize: \"1rem\",\n              backgroundColor: saveAnimating ? \"#2ecc71\" : \"#27ae60\",\n              transform: saveAnimating\n                ? \"scale(1.05)\"\n                : saveClickAnimating\n                ? \"scale(0.95)\"\n                : \"scale(1)\",\n              transition: \"transform 0.15s ease\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"8px\",\n              cursor: isRecording ? \"not-allowed\" : \"pointer\",\n              userSelect: \"none\",\n              fontWeight: \"600\",\n            }}\n          >\n            Save Entry\n          </button>\n        </div>\n      </form>\n\n      <hr style={{ margin: \"2rem 0\", borderColor: \"#ccc\" }} />\n      <h2 style={{ textAlign: \"center\", marginBottom: \"1rem\" }}>\n        📅 Journal Calendar\n      </h2>\n      \n      <div style={{ \n        textAlign: \"center\", \n        marginBottom: \"1rem\", \n        fontSize: \"0.9rem\", \n        color: \"#666\",\n        fontStyle: \"italic\" \n      }}>\n        💡 Click on any date to view all entries for that day\n      </div>\n\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Calendar\n          onChange={(date) => {\n            console.log(\"Calendar date changed to:\", date, \"formatted as:\", formatDateLocal(date));\n            setSelectedDate(date);\n            setShowToast(false);\n            setSaveMessage(\"\");\n          }}\n          onClickDay={handleDateClick}\n          value={selectedDate}\n          locale=\"en-US\"\n        />\n      </div>\n\n      {/* Entries section with enhanced error handling and refresh */}\n      <div\n        style={{\n          marginTop: \"1rem\",\n          padding: \"1rem\",\n          backgroundColor: \"#f9f9f9\",\n          borderRadius: \"8px\",\n          border: \"1px solid #ccc\",\n        }}\n      >\n        <div style={{ \n          display: \"flex\", \n          justifyContent: \"space-between\", \n          alignItems: \"center\",\n          marginBottom: \"1rem\" \n        }}>\n          <h3 style={{ margin: 0 }}>\n            Entries for {formatDateLocal(selectedDate)}\n            {isRefreshingEntries && (\n              <span style={{ fontSize: \"0.8rem\", color: \"#666\", marginLeft: \"1rem\" }}>\n                🔄 Refreshing...\n              </span>\n            )}\n          </h3>\n          <button\n            onClick={handleRefreshEntries}\n            disabled={isLoadingEntries || isRefreshingEntries}\n            style={{\n              padding: \"0.4rem 0.8rem\",\n              fontSize: \"0.8rem\",\n              cursor: isLoadingEntries || isRefreshingEntries ? \"not-allowed\" : \"pointer\",\n              borderRadius: \"6px\",\n              border: \"1px solid #888\",\n              backgroundColor: \"#f0f0f0\",\n              color: \"#333\",\n            }}\n            title=\"Refresh entries\"\n          >\n            🔄 Refresh\n          </button>\n        </div>\n\n        {fetchError && (\n          <div\n            style={{\n              backgroundColor: \"#fee\",\n              color: \"#c33\",\n              padding: \"0.75rem\",\n              borderRadius: \"6px\",\n              marginBottom: \"1rem\",\n              fontSize: \"0.9rem\",\n              border: \"1px solid #fcc\",\n            }}\n          >\n            ⚠️ Error loading entries: {fetchError}\n            {entriesForDate.length > 0 && (\n              <div style={{ marginTop: \"0.5rem\", fontSize: \"0.8rem\" }}>\n                Showing cached data below.\n              </div>\n            )}\n          </div>\n        )}\n        \n        {isLoadingEntries ? (\n          <div style={{ \n            textAlign: \"center\", \n            color: \"#666\", \n            fontStyle: \"italic\",\n            padding: \"1rem\" \n          }}>\n            Loading entries...\n          </div>\n        ) : entriesForDate.length > 0 ? (\n          <>\n            <div style={{ \n              fontSize: \"0.9rem\", \n              color: \"#666\", \n              marginBottom: \"1rem\",\n              fontStyle: \"italic\" \n            }}>\n              ({entriesForDate.length} {entriesForDate.length === 1 ? 'entry' : 'entries'} found - Most Recent First)\n              {!isCacheValid(formatDateLocal(selectedDate)) && entriesForDate.length > 0 && (\n                <span style={{ color: \"#f39c12\", marginLeft: \"0.5rem\" }}>\n                  (cached data)\n                </span>\n              )}\n            </div>\n            {entriesForDate.map(({ time, entry }, index) => (\n              <div\n                key={`${time}-${index}`}\n                style={{\n                  marginBottom: \"1rem\",\n                  borderBottom: index < entriesForDate.length - 1 ? \"1px solid #ddd\" : \"none\",\n                  paddingBottom: \"0.5rem\",\n                }}\n              >\n                <div\n                  style={{\n                    fontWeight: \"bold\",\n                    fontSize: \"0.9rem\",\n                    marginBottom: \"0.5rem\",\n                    color: \"#555\",\n                    borderBottom: \"1px solid #eee\",\n                    paddingBottom: \"0.25rem\",\n                  }}\n                >\n                  {time}\n                </div>\n                <div style={{ \n                  whiteSpace: \"pre-wrap\",\n                  paddingTop: \"0.25rem\",\n                  lineHeight: \"1.4\"\n                }}>\n                  {entry}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : (\n          <div style={{ \n            textAlign: \"center\", \n            color: \"#666\", \n            fontStyle: \"italic\",\n            padding: \"1rem\" \n          }}>\n            No entries found for this date.\n          </div>\n        )}\n      </div>\n\n      {/* Debug Section */}\n      <DebugSection />\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}